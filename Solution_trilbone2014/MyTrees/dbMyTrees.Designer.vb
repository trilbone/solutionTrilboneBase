
'------------------------------------------------------------------------------
' <auto-generated>
'    Этот код был создан из шаблона.
'
'    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
'    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.ComponentModel
Imports System.Data.EntityClient
Imports System.Data.Objects
Imports System.Data.Objects.DataClasses
Imports System.Linq
Imports System.Runtime.Serialization
Imports System.Xml.Serialization


<Assembly: EdmSchemaAttribute("ebb809aa-2c93-4547-aa2d-52b83c7b964b")>
#Region "Метаданные связи EDM"
<Assembly: EdmRelationshipAttribute("dbMyTrees", "edmBlockTreeedmVolume", "edmBlockTree", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(edmFile), "edmVolume", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(edmPrivateTree), True)>
<Assembly: EdmRelationshipAttribute("dbMyTrees", "edmUseredmBlockTree", "edmUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(edmUser), "edmBlockTree", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(edmFile))>
<Assembly: EdmRelationshipAttribute("dbMyTrees", "edmNodeObjectedmTag", "edmNodeObject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(edmNodeObject), "edmTag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(edmTag))>
<Assembly: EdmRelationshipAttribute("dbMyTrees", "edmVirtualTreeedmPrivateTree", "edmVirtualTree", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(edmVirtualTree), "edmPrivateTree", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(edmPrivateTree))>
<Assembly: EdmRelationshipAttribute("dbMyTrees", "edmOwnerNode", "edmUser", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(edmUser), "edmNodeObject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(edmNodeObject))>
<Assembly: EdmRelationshipAttribute("dbMyTrees", "edmPrivateTreeedmNodePosition", "edmPrivateTree", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(edmPrivateTree), "edmNodePosition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(edmNodePosition))>
<Assembly: EdmRelationshipAttribute("dbMyTrees", "edmVirtualTreeedmNodePosition", "edmVirtualTree", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(edmVirtualTree), "edmNodePosition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(edmNodePosition))>
<Assembly: EdmRelationshipAttribute("dbMyTrees", "edmNodeObjectedmNodePosition", "edmNodeObject", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(edmNodeObject), "edmNodePosition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(edmNodePosition))>
<Assembly: EdmRelationshipAttribute("dbMyTrees", "edmNodePositionedmNodePosition", "edmNodePosition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(edmNodePosition), "edmNodePosition1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(edmNodePosition))>
<Assembly: EdmRelationshipAttribute("dbMyTrees", "edmLinkedNodeedmNodePosition", "edmLinkedNode", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(edmAttachedNode), "edmNodePosition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(edmNodePosition))>
<Assembly: EdmRelationshipAttribute("dbMyTrees", "edmUseredmNodePosition", "edmUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(edmUser), "edmNodePosition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(edmNodePosition))>
<Assembly: EdmRelationshipAttribute("dbMyTrees", "edmUseredmLinkedNode", "edmUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(edmUser), "edmLinkedNode", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(edmAttachedNode))>
<Assembly: EdmRelationshipAttribute("dbMyTrees", "edmUseredmNodeImage", "edmUser", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(edmUser), "edmNodeImage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(edmNodeImage))>
<Assembly: EdmRelationshipAttribute("dbMyTrees", "edmUseredmImagePosition", "edmUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(edmUser), "edmImagePosition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(edmImagePosition))>
<Assembly: EdmRelationshipAttribute("dbMyTrees", "edmNodeImageedmImagePosition", "edmNodeImage", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(edmNodeImage), "edmImagePosition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(edmImagePosition))>
<Assembly: EdmRelationshipAttribute("dbMyTrees", "edmNodeObjectedmImagePosition", "edmNodeObject", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(edmNodeObject), "edmImagePosition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(edmImagePosition))>
<Assembly: EdmRelationshipAttribute("dbMyTrees", "edmUseredmAttachedNode", "edmUser", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(edmUser), "edmAttachedNode", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(edmAttachedNode))>
<Assembly: EdmRelationshipAttribute("dbMyTrees", "edmUseredmFile", "edmUser", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(edmUser), "edmFile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(edmFile))>
<Assembly: EdmRelationshipAttribute("dbMyTrees", "edmNodeImageedmResource", "edmNodeImage", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(edmNodeImage), "edmResource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(edmResource))>
<Assembly: EdmRelationshipAttribute("dbMyTrees", "edmNodeObjectedmResource", "edmNodeObject", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(edmNodeObject), "edmResource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(edmResource))>
<Assembly: EdmRelationshipAttribute("dbMyTrees", "edmVirtualTreeedmResource", "edmVirtualTree", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(edmVirtualTree), "edmResource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(edmResource))>
<Assembly: EdmRelationshipAttribute("dbMyTrees", "edmPrivateTreeedmResource", "edmPrivateTree", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(edmPrivateTree), "edmResource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(edmResource))>
<Assembly: EdmRelationshipAttribute("dbMyTrees", "edmAttachedNodeedmResource", "edmAttachedNode", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(edmAttachedNode), "edmResource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(edmResource))>
<Assembly: EdmRelationshipAttribute("dbMyTrees", "edmFileedmResource", "edmFile", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(edmFile), "edmResource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(edmResource))>
<Assembly: EdmRelationshipAttribute("dbMyTrees", "edmUseredmResource", "edmUser", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(edmUser), "edmResource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(edmResource))>

#End Region

#Region "Контексты"

''' <summary>
''' Нет доступной документации по метаданным.
''' </summary>
Public Partial Class dbMyTreesContainer
    Inherits ObjectContext

    #Region "Конструкторы"

    ''' <summary>
    ''' Инициализирует новый объект dbMyTreesContainer, используя строку соединения из раздела "dbMyTreesContainer" файла конфигурации приложения.
    ''' </summary>
    Public Sub New()
        MyBase.New("name=dbMyTreesContainer", "dbMyTreesContainer")
        MyBase.ContextOptions.LazyLoadingEnabled = true
        OnContextCreated()
    End Sub

    ''' <summary>
    ''' Инициализация нового объекта dbMyTreesContainer.
    ''' </summary>
    Public Sub New(ByVal connectionString As String)
        MyBase.New(connectionString, "dbMyTreesContainer")
        MyBase.ContextOptions.LazyLoadingEnabled = true
        OnContextCreated()
    End Sub

    ''' <summary>
    ''' Инициализация нового объекта dbMyTreesContainer.
    ''' </summary>
    Public Sub New(ByVal connection As EntityConnection)
        MyBase.New(connection, "dbMyTreesContainer")
        MyBase.ContextOptions.LazyLoadingEnabled = true
        OnContextCreated()
    End Sub

    #End Region

    #Region "Разделяемые методы"

    Partial Private Sub OnContextCreated()
    End Sub

    #End Region

    #Region "Свойства ObjectSet"

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    Public ReadOnly Property edmNodeObjectSet() As ObjectSet(Of edmNodeObject)
        Get
            If (_edmNodeObjectSet Is Nothing) Then
                _edmNodeObjectSet = MyBase.CreateObjectSet(Of edmNodeObject)("edmNodeObjectSet")
            End If
            Return _edmNodeObjectSet
        End Get
    End Property

    Private _edmNodeObjectSet As ObjectSet(Of edmNodeObject)

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    Public ReadOnly Property edmVirtualTreeSet() As ObjectSet(Of edmVirtualTree)
        Get
            If (_edmVirtualTreeSet Is Nothing) Then
                _edmVirtualTreeSet = MyBase.CreateObjectSet(Of edmVirtualTree)("edmVirtualTreeSet")
            End If
            Return _edmVirtualTreeSet
        End Get
    End Property

    Private _edmVirtualTreeSet As ObjectSet(Of edmVirtualTree)

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    Public ReadOnly Property edmFileSet() As ObjectSet(Of edmFile)
        Get
            If (_edmFileSet Is Nothing) Then
                _edmFileSet = MyBase.CreateObjectSet(Of edmFile)("edmFileSet")
            End If
            Return _edmFileSet
        End Get
    End Property

    Private _edmFileSet As ObjectSet(Of edmFile)

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    Public ReadOnly Property edmNodeImageSet() As ObjectSet(Of edmNodeImage)
        Get
            If (_edmNodeImageSet Is Nothing) Then
                _edmNodeImageSet = MyBase.CreateObjectSet(Of edmNodeImage)("edmNodeImageSet")
            End If
            Return _edmNodeImageSet
        End Get
    End Property

    Private _edmNodeImageSet As ObjectSet(Of edmNodeImage)

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    Public ReadOnly Property edmPrivateTreeSet() As ObjectSet(Of edmPrivateTree)
        Get
            If (_edmPrivateTreeSet Is Nothing) Then
                _edmPrivateTreeSet = MyBase.CreateObjectSet(Of edmPrivateTree)("edmPrivateTreeSet")
            End If
            Return _edmPrivateTreeSet
        End Get
    End Property

    Private _edmPrivateTreeSet As ObjectSet(Of edmPrivateTree)

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    Public ReadOnly Property edmUserSet() As ObjectSet(Of edmUser)
        Get
            If (_edmUserSet Is Nothing) Then
                _edmUserSet = MyBase.CreateObjectSet(Of edmUser)("edmUserSet")
            End If
            Return _edmUserSet
        End Get
    End Property

    Private _edmUserSet As ObjectSet(Of edmUser)

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    Public ReadOnly Property edmTagSet() As ObjectSet(Of edmTag)
        Get
            If (_edmTagSet Is Nothing) Then
                _edmTagSet = MyBase.CreateObjectSet(Of edmTag)("edmTagSet")
            End If
            Return _edmTagSet
        End Get
    End Property

    Private _edmTagSet As ObjectSet(Of edmTag)

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    Public ReadOnly Property edmAttachedNodeSet() As ObjectSet(Of edmAttachedNode)
        Get
            If (_edmAttachedNodeSet Is Nothing) Then
                _edmAttachedNodeSet = MyBase.CreateObjectSet(Of edmAttachedNode)("edmAttachedNodeSet")
            End If
            Return _edmAttachedNodeSet
        End Get
    End Property

    Private _edmAttachedNodeSet As ObjectSet(Of edmAttachedNode)

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    Public ReadOnly Property edmNodePositionSet() As ObjectSet(Of edmNodePosition)
        Get
            If (_edmNodePositionSet Is Nothing) Then
                _edmNodePositionSet = MyBase.CreateObjectSet(Of edmNodePosition)("edmNodePositionSet")
            End If
            Return _edmNodePositionSet
        End Get
    End Property

    Private _edmNodePositionSet As ObjectSet(Of edmNodePosition)

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    Public ReadOnly Property edmImagePositionSet() As ObjectSet(Of edmImagePosition)
        Get
            If (_edmImagePositionSet Is Nothing) Then
                _edmImagePositionSet = MyBase.CreateObjectSet(Of edmImagePosition)("edmImagePositionSet")
            End If
            Return _edmImagePositionSet
        End Get
    End Property

    Private _edmImagePositionSet As ObjectSet(Of edmImagePosition)

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    Public ReadOnly Property edmResourceSet() As ObjectSet(Of edmResource)
        Get
            If (_edmResourceSet Is Nothing) Then
                _edmResourceSet = MyBase.CreateObjectSet(Of edmResource)("edmResourceSet")
            End If
            Return _edmResourceSet
        End Get
    End Property

    Private _edmResourceSet As ObjectSet(Of edmResource)

    #End Region

    #Region "Методы AddTo"

    ''' <summary>
    ''' Устаревший метод для добавления новых объектов в набор EntitySet edmNodeObjectSet. Взамен можно использовать метод .Add связанного свойства ObjectSet(Of T).
    ''' </summary>
    Public Sub AddToedmNodeObjectSet(ByVal edmNodeObject As edmNodeObject)
        MyBase.AddObject("edmNodeObjectSet", edmNodeObject)
    End Sub

    ''' <summary>
    ''' Устаревший метод для добавления новых объектов в набор EntitySet edmVirtualTreeSet. Взамен можно использовать метод .Add связанного свойства ObjectSet(Of T).
    ''' </summary>
    Public Sub AddToedmVirtualTreeSet(ByVal edmVirtualTree As edmVirtualTree)
        MyBase.AddObject("edmVirtualTreeSet", edmVirtualTree)
    End Sub

    ''' <summary>
    ''' Устаревший метод для добавления новых объектов в набор EntitySet edmFileSet. Взамен можно использовать метод .Add связанного свойства ObjectSet(Of T).
    ''' </summary>
    Public Sub AddToedmFileSet(ByVal edmFile As edmFile)
        MyBase.AddObject("edmFileSet", edmFile)
    End Sub

    ''' <summary>
    ''' Устаревший метод для добавления новых объектов в набор EntitySet edmNodeImageSet. Взамен можно использовать метод .Add связанного свойства ObjectSet(Of T).
    ''' </summary>
    Public Sub AddToedmNodeImageSet(ByVal edmNodeImage As edmNodeImage)
        MyBase.AddObject("edmNodeImageSet", edmNodeImage)
    End Sub

    ''' <summary>
    ''' Устаревший метод для добавления новых объектов в набор EntitySet edmPrivateTreeSet. Взамен можно использовать метод .Add связанного свойства ObjectSet(Of T).
    ''' </summary>
    Public Sub AddToedmPrivateTreeSet(ByVal edmPrivateTree As edmPrivateTree)
        MyBase.AddObject("edmPrivateTreeSet", edmPrivateTree)
    End Sub

    ''' <summary>
    ''' Устаревший метод для добавления новых объектов в набор EntitySet edmUserSet. Взамен можно использовать метод .Add связанного свойства ObjectSet(Of T).
    ''' </summary>
    Public Sub AddToedmUserSet(ByVal edmUser As edmUser)
        MyBase.AddObject("edmUserSet", edmUser)
    End Sub

    ''' <summary>
    ''' Устаревший метод для добавления новых объектов в набор EntitySet edmTagSet. Взамен можно использовать метод .Add связанного свойства ObjectSet(Of T).
    ''' </summary>
    Public Sub AddToedmTagSet(ByVal edmTag As edmTag)
        MyBase.AddObject("edmTagSet", edmTag)
    End Sub

    ''' <summary>
    ''' Устаревший метод для добавления новых объектов в набор EntitySet edmAttachedNodeSet. Взамен можно использовать метод .Add связанного свойства ObjectSet(Of T).
    ''' </summary>
    Public Sub AddToedmAttachedNodeSet(ByVal edmAttachedNode As edmAttachedNode)
        MyBase.AddObject("edmAttachedNodeSet", edmAttachedNode)
    End Sub

    ''' <summary>
    ''' Устаревший метод для добавления новых объектов в набор EntitySet edmNodePositionSet. Взамен можно использовать метод .Add связанного свойства ObjectSet(Of T).
    ''' </summary>
    Public Sub AddToedmNodePositionSet(ByVal edmNodePosition As edmNodePosition)
        MyBase.AddObject("edmNodePositionSet", edmNodePosition)
    End Sub

    ''' <summary>
    ''' Устаревший метод для добавления новых объектов в набор EntitySet edmImagePositionSet. Взамен можно использовать метод .Add связанного свойства ObjectSet(Of T).
    ''' </summary>
    Public Sub AddToedmImagePositionSet(ByVal edmImagePosition As edmImagePosition)
        MyBase.AddObject("edmImagePositionSet", edmImagePosition)
    End Sub

    ''' <summary>
    ''' Устаревший метод для добавления новых объектов в набор EntitySet edmResourceSet. Взамен можно использовать метод .Add связанного свойства ObjectSet(Of T).
    ''' </summary>
    Public Sub AddToedmResourceSet(ByVal edmResource As edmResource)
        MyBase.AddObject("edmResourceSet", edmResource)
    End Sub

    #End Region

End Class

#End Region

#Region "Сущности"

''' <summary>
''' 
''' </summary>
''' <LongDescription>
''' это связанные узлы типа Коваль из вильповиц
''' </LongDescription>
<EdmEntityTypeAttribute(NamespaceName:="dbMyTrees", Name:="edmAttachedNode")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class edmAttachedNode
    Inherits EntityObject
    #Region "Фабричный метод"

    ''' <summary>
    ''' Создание нового объекта edmAttachedNode.
    ''' </summary>
    ''' <param name="id">Исходное значение свойства Id.</param>
    ''' <param name="pathID">Исходное значение свойства PathID.</param>
    Public Shared Function CreateedmAttachedNode(id As Global.System.Int32, pathID As Global.System.String) As edmAttachedNode
        Dim edmAttachedNode as edmAttachedNode = New edmAttachedNode
        edmAttachedNode.Id = id
        edmAttachedNode.PathID = pathID
        Return edmAttachedNode
    End Function

    #End Region

    #Region "Свойства-примитивы"

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Id() As Global.System.Int32
        Get
            Return _Id
        End Get
        Set
            If (_Id <> Value) Then
                OnIdChanging(value)
                ReportPropertyChanging("Id")
                _Id = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("Id")
                OnIdChanged()
            End If
        End Set
    End Property

    Private _Id As Global.System.Int32
    Private Partial Sub OnIdChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIdChanged()
    End Sub

    ''' <summary>
    ''' 
    ''' </summary>
    ''' <LongDescription>
    ''' сюда пока пишется артикул в виде 123/256/12... (номера связанных узлов)
    ''' </LongDescription>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property PathID() As Global.System.String
        Get
            Return _PathID
        End Get
        Set
            OnPathIDChanging(value)
            ReportPropertyChanging("PathID")
            _PathID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("PathID")
            OnPathIDChanged()
        End Set
    End Property

    Private _PathID As Global.System.String
    Private Partial Sub OnPathIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnPathIDChanged()
    End Sub

    #End Region

    #Region "Свойства навигации"

    ''' <summary>
    ''' 
    ''' </summary>
    ''' <LongDescription>
    ''' Позиции, составляющие конкретный комплекс
    ''' </LongDescription>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmLinkedNodeedmNodePosition", "edmNodePosition")>
     Public Property edmNodePositionList() As EntityCollection(Of edmNodePosition)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of edmNodePosition)("dbMyTrees.edmLinkedNodeedmNodePosition", "edmNodePosition")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of edmNodePosition)("dbMyTrees.edmLinkedNodeedmNodePosition", "edmNodePosition", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' 
    ''' </summary>
    ''' <LongDescription>
    ''' Список пользователей, одобряющий данный комплекс&#xA;NULL комплекс для всех
    ''' </LongDescription>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmUseredmLinkedNode", "edmUser")>
     Public Property edmUserList() As EntityCollection(Of edmUser)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of edmUser)("dbMyTrees.edmUseredmLinkedNode", "edmUser")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of edmUser)("dbMyTrees.edmUseredmLinkedNode", "edmUser", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' 
    ''' </summary>
    ''' <LongDescription>
    ''' Создатель комплекса
    ''' </LongDescription>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmUseredmAttachedNode", "edmUser")>
    Public Property edmOwnUser() As edmUser
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmUser)("dbMyTrees.edmUseredmAttachedNode", "edmUser").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmUser)("dbMyTrees.edmUseredmAttachedNode", "edmUser").Value = value
        End Set
    End Property
    ''' <summary>
    ''' 
    ''' </summary>
    ''' <LongDescription>
    ''' Создатель комплекса
    ''' </LongDescription>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property edmOwnUserReference() As EntityReference(Of edmUser)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmUser)("dbMyTrees.edmUseredmAttachedNode", "edmUser")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of edmUser)("dbMyTrees.edmUseredmAttachedNode", "edmUser", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmAttachedNodeedmResource", "edmResource")>
     Public Property edmResource() As EntityCollection(Of edmResource)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of edmResource)("dbMyTrees.edmAttachedNodeedmResource", "edmResource")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of edmResource)("dbMyTrees.edmAttachedNodeedmResource", "edmResource", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' аналог файла
''' </summary>
''' <LongDescription>
''' Обьект группировки частных деревьев
''' </LongDescription>
<EdmEntityTypeAttribute(NamespaceName:="dbMyTrees", Name:="edmFile")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class edmFile
    Inherits EntityObject
    #Region "Фабричный метод"

    ''' <summary>
    ''' Создание нового объекта edmFile.
    ''' </summary>
    ''' <param name="id">Исходное значение свойства Id.</param>
    Public Shared Function CreateedmFile(id As Global.System.Int32) As edmFile
        Dim edmFile as edmFile = New edmFile
        edmFile.Id = id
        Return edmFile
    End Function

    #End Region

    #Region "Свойства-примитивы"

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Id() As Global.System.Int32
        Get
            Return _Id
        End Get
        Set
            If (_Id <> Value) Then
                OnIdChanging(value)
                ReportPropertyChanging("Id")
                _Id = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("Id")
                OnIdChanged()
            End If
        End Set
    End Property

    Private _Id As Global.System.Int32
    Private Partial Sub OnIdChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIdChanged()
    End Sub

    #End Region

    #Region "Свойства навигации"

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmBlockTreeedmVolume", "edmVolume")>
     Public Property edmPrivateTreeList() As EntityCollection(Of edmPrivateTree)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of edmPrivateTree)("dbMyTrees.edmBlockTreeedmVolume", "edmVolume")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of edmPrivateTree)("dbMyTrees.edmBlockTreeedmVolume", "edmVolume", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' 
    ''' </summary>
    ''' <LongDescription>
    ''' пользователи, использующие этот файл&#xA;NULL = общий для всех пользователей
    ''' </LongDescription>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmUseredmBlockTree", "edmUser")>
     Public Property edmUserList() As EntityCollection(Of edmUser)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of edmUser)("dbMyTrees.edmUseredmBlockTree", "edmUser")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of edmUser)("dbMyTrees.edmUseredmBlockTree", "edmUser", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmUseredmFile", "edmUser")>
    Public Property edmOwnUser() As edmUser
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmUser)("dbMyTrees.edmUseredmFile", "edmUser").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmUser)("dbMyTrees.edmUseredmFile", "edmUser").Value = value
        End Set
    End Property
    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property edmOwnUserReference() As EntityReference(Of edmUser)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmUser)("dbMyTrees.edmUseredmFile", "edmUser")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of edmUser)("dbMyTrees.edmUseredmFile", "edmUser", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmFileedmResource", "edmResource")>
     Public Property edmResource() As EntityCollection(Of edmResource)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of edmResource)("dbMyTrees.edmFileedmResource", "edmResource")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of edmResource)("dbMyTrees.edmFileedmResource", "edmResource", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' 
''' </summary>
''' <LongDescription>
''' Таблица привязки изображений к сущностям
''' </LongDescription>
<EdmEntityTypeAttribute(NamespaceName:="dbMyTrees", Name:="edmImagePosition")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class edmImagePosition
    Inherits EntityObject
    #Region "Фабричный метод"

    ''' <summary>
    ''' Создание нового объекта edmImagePosition.
    ''' </summary>
    ''' <param name="id">Исходное значение свойства Id.</param>
    Public Shared Function CreateedmImagePosition(id As Global.System.Int32) As edmImagePosition
        Dim edmImagePosition as edmImagePosition = New edmImagePosition
        edmImagePosition.Id = id
        Return edmImagePosition
    End Function

    #End Region

    #Region "Свойства-примитивы"

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Id() As Global.System.Int32
        Get
            Return _Id
        End Get
        Set
            If (_Id <> Value) Then
                OnIdChanging(value)
                ReportPropertyChanging("Id")
                _Id = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("Id")
                OnIdChanged()
            End If
        End Set
    End Property

    Private _Id As Global.System.Int32
    Private Partial Sub OnIdChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIdChanged()
    End Sub

    #End Region

    #Region "Свойства навигации"

    ''' <summary>
    ''' 
    ''' </summary>
    ''' <LongDescription>
    ''' Null - значит все пользователи согласны&#xA;[list] - список согласных&#xA;С привязкой изображения к узлу
    ''' </LongDescription>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmUseredmImagePosition", "edmUser")>
     Public Property edmUserList() As EntityCollection(Of edmUser)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of edmUser)("dbMyTrees.edmUseredmImagePosition", "edmUser")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of edmUser)("dbMyTrees.edmUseredmImagePosition", "edmUser", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmNodeImageedmImagePosition", "edmNodeImage")>
    Public Property edmNodeImage() As edmNodeImage
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmNodeImage)("dbMyTrees.edmNodeImageedmImagePosition", "edmNodeImage").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmNodeImage)("dbMyTrees.edmNodeImageedmImagePosition", "edmNodeImage").Value = value
        End Set
    End Property
    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property edmNodeImageReference() As EntityReference(Of edmNodeImage)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmNodeImage)("dbMyTrees.edmNodeImageedmImagePosition", "edmNodeImage")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of edmNodeImage)("dbMyTrees.edmNodeImageedmImagePosition", "edmNodeImage", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmNodeObjectedmImagePosition", "edmNodeObject")>
    Public Property edmNodeObject() As edmNodeObject
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmNodeObject)("dbMyTrees.edmNodeObjectedmImagePosition", "edmNodeObject").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmNodeObject)("dbMyTrees.edmNodeObjectedmImagePosition", "edmNodeObject").Value = value
        End Set
    End Property
    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property edmNodeObjectReference() As EntityReference(Of edmNodeObject)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmNodeObject)("dbMyTrees.edmNodeObjectedmImagePosition", "edmNodeObject")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of edmNodeObject)("dbMyTrees.edmNodeObjectedmImagePosition", "edmNodeObject", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' 
''' </summary>
''' <LongDescription>
''' Изображение. Может привязываться к разным сущностям разными пользователями
''' </LongDescription>
<EdmEntityTypeAttribute(NamespaceName:="dbMyTrees", Name:="edmNodeImage")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class edmNodeImage
    Inherits EntityObject
    #Region "Фабричный метод"

    ''' <summary>
    ''' Создание нового объекта edmNodeImage.
    ''' </summary>
    ''' <param name="id">Исходное значение свойства Id.</param>
    ''' <param name="storageImageName">Исходное значение свойства StorageImageName.</param>
    ''' <param name="storageBlockName">Исходное значение свойства StorageBlockName.</param>
    Public Shared Function CreateedmNodeImage(id As Global.System.Int32, storageImageName As Global.System.String, storageBlockName As Global.System.String) As edmNodeImage
        Dim edmNodeImage as edmNodeImage = New edmNodeImage
        edmNodeImage.Id = id
        edmNodeImage.StorageImageName = storageImageName
        edmNodeImage.StorageBlockName = storageBlockName
        Return edmNodeImage
    End Function

    #End Region

    #Region "Свойства-примитивы"

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Id() As Global.System.Int32
        Get
            Return _Id
        End Get
        Set
            If (_Id <> Value) Then
                OnIdChanging(value)
                ReportPropertyChanging("Id")
                _Id = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("Id")
                OnIdChanged()
            End If
        End Set
    End Property

    Private _Id As Global.System.Int32
    Private Partial Sub OnIdChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIdChanged()
    End Sub

    ''' <summary>
    ''' название файла в папке
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property StorageImageName() As Global.System.String
        Get
            Return _StorageImageName
        End Get
        Set
            OnStorageImageNameChanging(value)
            ReportPropertyChanging("StorageImageName")
            _StorageImageName = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("StorageImageName")
            OnStorageImageNameChanged()
        End Set
    End Property

    Private _StorageImageName As Global.System.String
    Private Partial Sub OnStorageImageNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnStorageImageNameChanged()
    End Sub

    ''' <summary>
    ''' Название блока (папки) хранения
    ''' </summary>
    ''' <LongDescription>
    ''' Как в старой системе хранения по ИД
    ''' </LongDescription>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property StorageBlockName() As Global.System.String
        Get
            Return _StorageBlockName
        End Get
        Set
            OnStorageBlockNameChanging(value)
            ReportPropertyChanging("StorageBlockName")
            _StorageBlockName = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("StorageBlockName")
            OnStorageBlockNameChanged()
        End Set
    End Property

    Private _StorageBlockName As Global.System.String
    Private Partial Sub OnStorageBlockNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnStorageBlockNameChanged()
    End Sub

    #End Region

    #Region "Свойства навигации"

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmUseredmNodeImage", "edmUser")>
    Public Property edmUser() As edmUser
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmUser)("dbMyTrees.edmUseredmNodeImage", "edmUser").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmUser)("dbMyTrees.edmUseredmNodeImage", "edmUser").Value = value
        End Set
    End Property
    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property edmUserReference() As EntityReference(Of edmUser)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmUser)("dbMyTrees.edmUseredmNodeImage", "edmUser")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of edmUser)("dbMyTrees.edmUseredmNodeImage", "edmUser", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmNodeImageedmImagePosition", "edmImagePosition")>
     Public Property edmImagePositionList() As EntityCollection(Of edmImagePosition)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of edmImagePosition)("dbMyTrees.edmNodeImageedmImagePosition", "edmImagePosition")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of edmImagePosition)("dbMyTrees.edmNodeImageedmImagePosition", "edmImagePosition", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmNodeImageedmResource", "edmResource")>
     Public Property edmResource() As EntityCollection(Of edmResource)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of edmResource)("dbMyTrees.edmNodeImageedmResource", "edmResource")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of edmResource)("dbMyTrees.edmNodeImageedmResource", "edmResource", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' 
''' </summary>
''' <LongDescription>
''' Сущность, характеризуемая НАЗВАНИЕМ&#xA;владелец NULL значит видима для всех
''' </LongDescription>
<EdmEntityTypeAttribute(NamespaceName:="dbMyTrees", Name:="edmNodeObject")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class edmNodeObject
    Inherits EntityObject
    #Region "Фабричный метод"

    ''' <summary>
    ''' Создание нового объекта edmNodeObject.
    ''' </summary>
    ''' <param name="id">Исходное значение свойства Id.</param>
    ''' <param name="oldNodeID">Исходное значение свойства OldNodeID.</param>
    Public Shared Function CreateedmNodeObject(id As Global.System.Int32, oldNodeID As Global.System.Int32) As edmNodeObject
        Dim edmNodeObject as edmNodeObject = New edmNodeObject
        edmNodeObject.Id = id
        edmNodeObject.OldNodeID = oldNodeID
        Return edmNodeObject
    End Function

    #End Region

    #Region "Свойства-примитивы"

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Id() As Global.System.Int32
        Get
            Return _Id
        End Get
        Set
            If (_Id <> Value) Then
                OnIdChanging(value)
                ReportPropertyChanging("Id")
                _Id = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("Id")
                OnIdChanged()
            End If
        End Set
    End Property

    Private _Id As Global.System.Int32
    Private Partial Sub OnIdChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIdChanged()
    End Sub

    ''' <summary>
    ''' 
    ''' </summary>
    ''' <LongDescription>
    ''' нужно для импорта старого
    ''' </LongDescription>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property OldNodeID() As Global.System.Int32
        Get
            Return _OldNodeID
        End Get
        Set
            OnOldNodeIDChanging(value)
            ReportPropertyChanging("OldNodeID")
            _OldNodeID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("OldNodeID")
            OnOldNodeIDChanged()
        End Set
    End Property

    Private _OldNodeID As Global.System.Int32
    Private Partial Sub OnOldNodeIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnOldNodeIDChanged()
    End Sub

    #End Region

    #Region "Свойства навигации"

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmNodeObjectedmTag", "edmTag")>
     Public Property edmTagList() As EntityCollection(Of edmTag)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of edmTag)("dbMyTrees.edmNodeObjectedmTag", "edmTag")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of edmTag)("dbMyTrees.edmNodeObjectedmTag", "edmTag", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmOwnerNode", "edmUser")>
    Public Property edmOwnUser() As edmUser
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmUser)("dbMyTrees.edmOwnerNode", "edmUser").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmUser)("dbMyTrees.edmOwnerNode", "edmUser").Value = value
        End Set
    End Property
    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property edmOwnUserReference() As EntityReference(Of edmUser)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmUser)("dbMyTrees.edmOwnerNode", "edmUser")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of edmUser)("dbMyTrees.edmOwnerNode", "edmUser", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmNodeObjectedmNodePosition", "edmNodePosition")>
     Public Property edmNodePositionList() As EntityCollection(Of edmNodePosition)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of edmNodePosition)("dbMyTrees.edmNodeObjectedmNodePosition", "edmNodePosition")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of edmNodePosition)("dbMyTrees.edmNodeObjectedmNodePosition", "edmNodePosition", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmNodeObjectedmImagePosition", "edmImagePosition")>
     Public Property edmImagePositionList() As EntityCollection(Of edmImagePosition)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of edmImagePosition)("dbMyTrees.edmNodeObjectedmImagePosition", "edmImagePosition")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of edmImagePosition)("dbMyTrees.edmNodeObjectedmImagePosition", "edmImagePosition", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmNodeObjectedmResource", "edmResource")>
     Public Property edmResource() As EntityCollection(Of edmResource)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of edmResource)("dbMyTrees.edmNodeObjectedmResource", "edmResource")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of edmResource)("dbMyTrees.edmNodeObjectedmResource", "edmResource", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' 
''' </summary>
''' <LongDescription>
''' Позиция сущности в деревьях&#xA;привязка к частному может быть NULL&#xA;привязка к виртуальному может быть NULL&#xA;две привязки НЕ могут быть NULL
''' </LongDescription>
<EdmEntityTypeAttribute(NamespaceName:="dbMyTrees", Name:="edmNodePosition")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class edmNodePosition
    Inherits EntityObject
    #Region "Фабричный метод"

    ''' <summary>
    ''' Создание нового объекта edmNodePosition.
    ''' </summary>
    ''' <param name="id">Исходное значение свойства Id.</param>
    ''' <param name="fullPath">Исходное значение свойства FullPath.</param>
    Public Shared Function CreateedmNodePosition(id As Global.System.Int32, fullPath As Global.System.String) As edmNodePosition
        Dim edmNodePosition as edmNodePosition = New edmNodePosition
        edmNodePosition.Id = id
        edmNodePosition.FullPath = fullPath
        Return edmNodePosition
    End Function

    #End Region

    #Region "Свойства-примитивы"

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Id() As Global.System.Int32
        Get
            Return _Id
        End Get
        Set
            If (_Id <> Value) Then
                OnIdChanging(value)
                ReportPropertyChanging("Id")
                _Id = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("Id")
                OnIdChanged()
            End If
        End Set
    End Property

    Private _Id As Global.System.Int32
    Private Partial Sub OnIdChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIdChanged()
    End Sub

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property FullPath() As Global.System.String
        Get
            Return _FullPath
        End Get
        Set
            OnFullPathChanging(value)
            ReportPropertyChanging("FullPath")
            _FullPath = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("FullPath")
            OnFullPathChanged()
        End Set
    End Property

    Private _FullPath As Global.System.String
    Private Partial Sub OnFullPathChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnFullPathChanged()
    End Sub

    #End Region

    #Region "Свойства навигации"

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmPrivateTreeedmNodePosition", "edmPrivateTree")>
    Public Property edmPrivateTree() As edmPrivateTree
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmPrivateTree)("dbMyTrees.edmPrivateTreeedmNodePosition", "edmPrivateTree").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmPrivateTree)("dbMyTrees.edmPrivateTreeedmNodePosition", "edmPrivateTree").Value = value
        End Set
    End Property
    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property edmPrivateTreeReference() As EntityReference(Of edmPrivateTree)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmPrivateTree)("dbMyTrees.edmPrivateTreeedmNodePosition", "edmPrivateTree")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of edmPrivateTree)("dbMyTrees.edmPrivateTreeedmNodePosition", "edmPrivateTree", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmVirtualTreeedmNodePosition", "edmVirtualTree")>
    Public Property edmVirtualTree() As edmVirtualTree
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmVirtualTree)("dbMyTrees.edmVirtualTreeedmNodePosition", "edmVirtualTree").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmVirtualTree)("dbMyTrees.edmVirtualTreeedmNodePosition", "edmVirtualTree").Value = value
        End Set
    End Property
    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property edmVirtualTreeReference() As EntityReference(Of edmVirtualTree)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmVirtualTree)("dbMyTrees.edmVirtualTreeedmNodePosition", "edmVirtualTree")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of edmVirtualTree)("dbMyTrees.edmVirtualTreeedmNodePosition", "edmVirtualTree", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmNodeObjectedmNodePosition", "edmNodeObject")>
    Public Property edmNodeObject() As edmNodeObject
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmNodeObject)("dbMyTrees.edmNodeObjectedmNodePosition", "edmNodeObject").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmNodeObject)("dbMyTrees.edmNodeObjectedmNodePosition", "edmNodeObject").Value = value
        End Set
    End Property
    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property edmNodeObjectReference() As EntityReference(Of edmNodeObject)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmNodeObject)("dbMyTrees.edmNodeObjectedmNodePosition", "edmNodeObject")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of edmNodeObject)("dbMyTrees.edmNodeObjectedmNodePosition", "edmNodeObject", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' 
    ''' </summary>
    ''' <LongDescription>
    ''' список связей данной позиции = в частном случае сущности
    ''' </LongDescription>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmNodePositionedmNodePosition", "edmNodePosition1")>
     Public Property edmLinkList() As EntityCollection(Of edmNodePosition)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of edmNodePosition)("dbMyTrees.edmNodePositionedmNodePosition", "edmNodePosition1")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of edmNodePosition)("dbMyTrees.edmNodePositionedmNodePosition", "edmNodePosition1", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmNodePositionedmNodePosition", "edmNodePosition")>
    Public Property edmFromNodePosition() As edmNodePosition
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmNodePosition)("dbMyTrees.edmNodePositionedmNodePosition", "edmNodePosition").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmNodePosition)("dbMyTrees.edmNodePositionedmNodePosition", "edmNodePosition").Value = value
        End Set
    End Property
    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property edmFromNodePositionReference() As EntityReference(Of edmNodePosition)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmNodePosition)("dbMyTrees.edmNodePositionedmNodePosition", "edmNodePosition")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of edmNodePosition)("dbMyTrees.edmNodePositionedmNodePosition", "edmNodePosition", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' 
    ''' </summary>
    ''' <LongDescription>
    ''' прикрепленные к позиции комплексы из связей,&#xA;например ковалевский из вильпов, коваль из волхова и т.д.
    ''' </LongDescription>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmLinkedNodeedmNodePosition", "edmLinkedNode")>
     Public Property edmAttachedNodeList() As EntityCollection(Of edmAttachedNode)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of edmAttachedNode)("dbMyTrees.edmLinkedNodeedmNodePosition", "edmLinkedNode")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of edmAttachedNode)("dbMyTrees.edmLinkedNodeedmNodePosition", "edmLinkedNode", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmUseredmNodePosition", "edmUser")>
     Public Property edmUser() As EntityCollection(Of edmUser)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of edmUser)("dbMyTrees.edmUseredmNodePosition", "edmUser")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of edmUser)("dbMyTrees.edmUseredmNodePosition", "edmUser", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' 
''' </summary>
''' <LongDescription>
''' частное дерево в файле
''' </LongDescription>
<EdmEntityTypeAttribute(NamespaceName:="dbMyTrees", Name:="edmPrivateTree")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class edmPrivateTree
    Inherits EntityObject
    #Region "Фабричный метод"

    ''' <summary>
    ''' Создание нового объекта edmPrivateTree.
    ''' </summary>
    ''' <param name="id">Исходное значение свойства Id.</param>
    ''' <param name="edmFileID">Исходное значение свойства edmFileID.</param>
    Public Shared Function CreateedmPrivateTree(id As Global.System.Int32, edmFileID As Global.System.Int32) As edmPrivateTree
        Dim edmPrivateTree as edmPrivateTree = New edmPrivateTree
        edmPrivateTree.Id = id
        edmPrivateTree.edmFileID = edmFileID
        Return edmPrivateTree
    End Function

    #End Region

    #Region "Свойства-примитивы"

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Id() As Global.System.Int32
        Get
            Return _Id
        End Get
        Set
            If (_Id <> Value) Then
                OnIdChanging(value)
                ReportPropertyChanging("Id")
                _Id = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("Id")
                OnIdChanged()
            End If
        End Set
    End Property

    Private _Id As Global.System.Int32
    Private Partial Sub OnIdChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIdChanged()
    End Sub

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property edmFileID() As Global.System.Int32
        Get
            Return _edmFileID
        End Get
        Set
            OnedmFileIDChanging(value)
            ReportPropertyChanging("edmFileID")
            _edmFileID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("edmFileID")
            OnedmFileIDChanged()
        End Set
    End Property

    Private _edmFileID As Global.System.Int32
    Private Partial Sub OnedmFileIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnedmFileIDChanged()
    End Sub

    #End Region

    #Region "Свойства навигации"

    ''' <summary>
    ''' 
    ''' </summary>
    ''' <LongDescription>
    ''' Файл, содержащий дерево
    ''' </LongDescription>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmBlockTreeedmVolume", "edmBlockTree")>
    Public Property edmFile() As edmFile
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmFile)("dbMyTrees.edmBlockTreeedmVolume", "edmBlockTree").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmFile)("dbMyTrees.edmBlockTreeedmVolume", "edmBlockTree").Value = value
        End Set
    End Property
    ''' <summary>
    ''' 
    ''' </summary>
    ''' <LongDescription>
    ''' Файл, содержащий дерево
    ''' </LongDescription>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property edmFileReference() As EntityReference(Of edmFile)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmFile)("dbMyTrees.edmBlockTreeedmVolume", "edmBlockTree")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of edmFile)("dbMyTrees.edmBlockTreeedmVolume", "edmBlockTree", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' 
    ''' </summary>
    ''' <LongDescription>
    ''' NULL - частное независимое дерево&#xA;иначе - поддерево виртуального дерева
    ''' </LongDescription>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmVirtualTreeedmPrivateTree", "edmVirtualTree")>
    Public Property edmVirtualTree() As edmVirtualTree
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmVirtualTree)("dbMyTrees.edmVirtualTreeedmPrivateTree", "edmVirtualTree").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmVirtualTree)("dbMyTrees.edmVirtualTreeedmPrivateTree", "edmVirtualTree").Value = value
        End Set
    End Property
    ''' <summary>
    ''' 
    ''' </summary>
    ''' <LongDescription>
    ''' NULL - частное независимое дерево&#xA;иначе - поддерево виртуального дерева
    ''' </LongDescription>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property edmVirtualTreeReference() As EntityReference(Of edmVirtualTree)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of edmVirtualTree)("dbMyTrees.edmVirtualTreeedmPrivateTree", "edmVirtualTree")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of edmVirtualTree)("dbMyTrees.edmVirtualTreeedmPrivateTree", "edmVirtualTree", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' 
    ''' </summary>
    ''' <LongDescription>
    ''' позиции входящие в дерево
    ''' </LongDescription>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmPrivateTreeedmNodePosition", "edmNodePosition")>
     Public Property edmNodePositionList() As EntityCollection(Of edmNodePosition)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of edmNodePosition)("dbMyTrees.edmPrivateTreeedmNodePosition", "edmNodePosition")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of edmNodePosition)("dbMyTrees.edmPrivateTreeedmNodePosition", "edmNodePosition", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmPrivateTreeedmResource", "edmResource")>
     Public Property edmResource() As EntityCollection(Of edmResource)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of edmResource)("dbMyTrees.edmPrivateTreeedmResource", "edmResource")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of edmResource)("dbMyTrees.edmPrivateTreeedmResource", "edmResource", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' Нет доступной документации по метаданным.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="dbMyTrees", Name:="edmResource")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class edmResource
    Inherits EntityObject
    #Region "Фабричный метод"

    ''' <summary>
    ''' Создание нового объекта edmResource.
    ''' </summary>
    ''' <param name="id">Исходное значение свойства Id.</param>
    ''' <param name="langID">Исходное значение свойства LangID.</param>
    ''' <param name="complexDescription">Исходное значение свойства ComplexDescription.</param>
    Public Shared Function CreateedmResource(id As Global.System.Int32, langID As Global.System.String, complexDescription As Description) As edmResource
        Dim edmResource as edmResource = New edmResource
        edmResource.Id = id
        edmResource.LangID = langID
        edmResource.ComplexDescription = StructuralObject.VerifyComplexObjectIsNotNull(complexDescription, "ComplexDescription")
        Return edmResource
    End Function

    #End Region

    #Region "Свойства-примитивы"

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Id() As Global.System.Int32
        Get
            Return _Id
        End Get
        Set
            If (_Id <> Value) Then
                OnIdChanging(value)
                ReportPropertyChanging("Id")
                _Id = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("Id")
                OnIdChanged()
            End If
        End Set
    End Property

    Private _Id As Global.System.Int32
    Private Partial Sub OnIdChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIdChanged()
    End Sub

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property LangID() As Global.System.String
        Get
            Return _LangID
        End Get
        Set
            OnLangIDChanging(value)
            ReportPropertyChanging("LangID")
            _LangID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("LangID")
            OnLangIDChanged()
        End Set
    End Property

    Private _LangID As Global.System.String
    Private Partial Sub OnLangIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnLangIDChanged()
    End Sub

    #End Region

    #Region "Сложные свойства"

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <EdmComplexPropertyAttribute()>
    <DesignerSerializationVisibility(DesignerSerializationVisibility.Content)>
    <XmlElement(IsNullable:=True)>
    <SoapElement(IsNullable:=True)>
    <DataMemberAttribute()>
    Public Property ComplexDescription() As Description
        Get
            _ComplexDescription = GetValidValue(_ComplexDescription, "ComplexDescription", False, _ComplexDescriptionInitialized)
            _ComplexDescriptionInitialized = True
            Return _ComplexDescription
        End Get
        Set
            OnComplexDescriptionChanging(value)
            ReportPropertyChanging("ComplexDescription")
            _ComplexDescription = SetValidValue(_ComplexDescription, value, "ComplexDescription")
            _ComplexDescriptionInitialized = True
            ReportPropertyChanged("ComplexDescription")
            OnComplexDescriptionChanged()
        End Set
    End Property

    Private _ComplexDescription As Description

    Private _ComplexDescriptionInitialized As Boolean

    Private Partial Sub OnComplexDescriptionChanging(value As Description)
    End Sub

    Private Partial Sub OnComplexDescriptionChanged()
    End Sub

    #End Region

End Class

''' <summary>
''' 
''' </summary>
''' <LongDescription>
''' облако тегов. Шрифт по кол-ву ссылок
''' </LongDescription>
<EdmEntityTypeAttribute(NamespaceName:="dbMyTrees", Name:="edmTag")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class edmTag
    Inherits EntityObject
    #Region "Фабричный метод"

    ''' <summary>
    ''' Создание нового объекта edmTag.
    ''' </summary>
    ''' <param name="id">Исходное значение свойства Id.</param>
    ''' <param name="name">Исходное значение свойства Name.</param>
    Public Shared Function CreateedmTag(id As Global.System.Int32, name As Global.System.String) As edmTag
        Dim edmTag as edmTag = New edmTag
        edmTag.Id = id
        edmTag.Name = name
        Return edmTag
    End Function

    #End Region

    #Region "Свойства-примитивы"

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Id() As Global.System.Int32
        Get
            Return _Id
        End Get
        Set
            If (_Id <> Value) Then
                OnIdChanging(value)
                ReportPropertyChanging("Id")
                _Id = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("Id")
                OnIdChanged()
            End If
        End Set
    End Property

    Private _Id As Global.System.Int32
    Private Partial Sub OnIdChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIdChanged()
    End Sub

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    #End Region

    #Region "Свойства навигации"

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmNodeObjectedmTag", "edmNodeObject")>
     Public Property edmNodeObject() As EntityCollection(Of edmNodeObject)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of edmNodeObject)("dbMyTrees.edmNodeObjectedmTag", "edmNodeObject")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of edmNodeObject)("dbMyTrees.edmNodeObjectedmTag", "edmNodeObject", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' Нет доступной документации по метаданным.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="dbMyTrees", Name:="edmUser")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class edmUser
    Inherits EntityObject
    #Region "Фабричный метод"

    ''' <summary>
    ''' Создание нового объекта edmUser.
    ''' </summary>
    ''' <param name="id">Исходное значение свойства Id.</param>
    Public Shared Function CreateedmUser(id As Global.System.Int32) As edmUser
        Dim edmUser as edmUser = New edmUser
        edmUser.Id = id
        Return edmUser
    End Function

    #End Region

    #Region "Свойства-примитивы"

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Id() As Global.System.Int32
        Get
            Return _Id
        End Get
        Set
            If (_Id <> Value) Then
                OnIdChanging(value)
                ReportPropertyChanging("Id")
                _Id = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("Id")
                OnIdChanged()
            End If
        End Set
    End Property

    Private _Id As Global.System.Int32
    Private Partial Sub OnIdChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIdChanged()
    End Sub

    #End Region

    #Region "Свойства навигации"

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmUseredmBlockTree", "edmBlockTree")>
     Public Property edmFileList() As EntityCollection(Of edmFile)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of edmFile)("dbMyTrees.edmUseredmBlockTree", "edmBlockTree")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of edmFile)("dbMyTrees.edmUseredmBlockTree", "edmBlockTree", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmOwnerNode", "edmNodeObject")>
     Public Property edmOwnedNodeObjectList() As EntityCollection(Of edmNodeObject)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of edmNodeObject)("dbMyTrees.edmOwnerNode", "edmNodeObject")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of edmNodeObject)("dbMyTrees.edmOwnerNode", "edmNodeObject", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmUseredmNodePosition", "edmNodePosition")>
     Public Property edmNodePositionList() As EntityCollection(Of edmNodePosition)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of edmNodePosition)("dbMyTrees.edmUseredmNodePosition", "edmNodePosition")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of edmNodePosition)("dbMyTrees.edmUseredmNodePosition", "edmNodePosition", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmUseredmLinkedNode", "edmLinkedNode")>
     Public Property edmLinkedNodeList() As EntityCollection(Of edmAttachedNode)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of edmAttachedNode)("dbMyTrees.edmUseredmLinkedNode", "edmLinkedNode")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of edmAttachedNode)("dbMyTrees.edmUseredmLinkedNode", "edmLinkedNode", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmUseredmNodeImage", "edmNodeImage")>
     Public Property edmNodeImageList() As EntityCollection(Of edmNodeImage)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of edmNodeImage)("dbMyTrees.edmUseredmNodeImage", "edmNodeImage")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of edmNodeImage)("dbMyTrees.edmUseredmNodeImage", "edmNodeImage", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmUseredmImagePosition", "edmImagePosition")>
     Public Property edmImagePositionList() As EntityCollection(Of edmImagePosition)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of edmImagePosition)("dbMyTrees.edmUseredmImagePosition", "edmImagePosition")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of edmImagePosition)("dbMyTrees.edmUseredmImagePosition", "edmImagePosition", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmUseredmAttachedNode", "edmAttachedNode")>
     Public Property edmAttachedNodeList() As EntityCollection(Of edmAttachedNode)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of edmAttachedNode)("dbMyTrees.edmUseredmAttachedNode", "edmAttachedNode")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of edmAttachedNode)("dbMyTrees.edmUseredmAttachedNode", "edmAttachedNode", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmUseredmFile", "edmFile")>
     Public Property edmFile() As EntityCollection(Of edmFile)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of edmFile)("dbMyTrees.edmUseredmFile", "edmFile")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of edmFile)("dbMyTrees.edmUseredmFile", "edmFile", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmUseredmResource", "edmResource")>
     Public Property edmResource() As EntityCollection(Of edmResource)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of edmResource)("dbMyTrees.edmUseredmResource", "edmResource")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of edmResource)("dbMyTrees.edmUseredmResource", "edmResource", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' например, систематика
''' </summary>
''' <LongDescription>
''' общие глобальные деревья
''' </LongDescription>
<EdmEntityTypeAttribute(NamespaceName:="dbMyTrees", Name:="edmVirtualTree")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class edmVirtualTree
    Inherits EntityObject
    #Region "Фабричный метод"

    ''' <summary>
    ''' Создание нового объекта edmVirtualTree.
    ''' </summary>
    ''' <param name="id">Исходное значение свойства Id.</param>
    Public Shared Function CreateedmVirtualTree(id As Global.System.Int32) As edmVirtualTree
        Dim edmVirtualTree as edmVirtualTree = New edmVirtualTree
        edmVirtualTree.Id = id
        Return edmVirtualTree
    End Function

    #End Region

    #Region "Свойства-примитивы"

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Id() As Global.System.Int32
        Get
            Return _Id
        End Get
        Set
            If (_Id <> Value) Then
                OnIdChanging(value)
                ReportPropertyChanging("Id")
                _Id = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("Id")
                OnIdChanged()
            End If
        End Set
    End Property

    Private _Id As Global.System.Int32
    Private Partial Sub OnIdChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIdChanged()
    End Sub

    #End Region

    #Region "Свойства навигации"

    ''' <summary>
    ''' 
    ''' </summary>
    ''' <LongDescription>
    ''' частные поддеревья
    ''' </LongDescription>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmVirtualTreeedmPrivateTree", "edmPrivateTree")>
     Public Property edmPrivateTreeList() As EntityCollection(Of edmPrivateTree)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of edmPrivateTree)("dbMyTrees.edmVirtualTreeedmPrivateTree", "edmPrivateTree")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of edmPrivateTree)("dbMyTrees.edmVirtualTreeedmPrivateTree", "edmPrivateTree", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' 
    ''' </summary>
    ''' <LongDescription>
    ''' позиции, входящие в дерево
    ''' </LongDescription>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmVirtualTreeedmNodePosition", "edmNodePosition")>
     Public Property edmNodePositionList() As EntityCollection(Of edmNodePosition)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of edmNodePosition)("dbMyTrees.edmVirtualTreeedmNodePosition", "edmNodePosition")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of edmNodePosition)("dbMyTrees.edmVirtualTreeedmNodePosition", "edmNodePosition", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("dbMyTrees", "edmVirtualTreeedmResource", "edmResource")>
     Public Property edmResource() As EntityCollection(Of edmResource)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of edmResource)("dbMyTrees.edmVirtualTreeedmResource", "edmResource")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of edmResource)("dbMyTrees.edmVirtualTreeedmResource", "edmResource", value)
            End If
        End Set
    End Property

    #End Region

End Class

#End Region

#Region "ComplexTypes"

''' <summary>
''' Нет доступной документации по метаданным.
''' </summary>
<EdmComplexTypeAttribute(NamespaceName:="dbMyTrees", Name:="Description")>
<DataContractAttribute(IsReference:=True)>
<Serializable()>
Public Partial Class Description
    Inherits ComplexObject
    #Region "Фабричный метод"

    ''' <summary>
    ''' Создание нового объекта Description.
    ''' </summary>
    ''' <param name="bigDescription">Исходное значение свойства BigDescription.</param>
    ''' <param name="info">Исходное значение свойства Info.</param>
    ''' <param name="name">Исходное значение свойства Name.</param>
    ''' <param name="uRI">Исходное значение свойства URI.</param>
    Public Shared Function CreateDescription(bigDescription As Global.System.String, info As Global.System.String, name As Global.System.String, uRI As Global.System.String) As Description
        Dim description as Description = New Description
        description.BigDescription = bigDescription
        description.Info = info
        description.Name = name
        description.URI = uRI
        Return description
    End Function

    #End Region

    #Region "Свойства-примитивы"

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property BigDescription() As Global.System.String
        Get
            Return _BigDescription
        End Get
        Set
            OnBigDescriptionChanging(value)
            ReportPropertyChanging("BigDescription")
            _BigDescription = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("BigDescription")
            OnBigDescriptionChanged()
        End Set
    End Property

    Private _BigDescription As Global.System.String
    Private Partial Sub OnBigDescriptionChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnBigDescriptionChanged()
    End Sub

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Info() As Global.System.String
        Get
            Return _Info
        End Get
        Set
            OnInfoChanging(value)
            ReportPropertyChanging("Info")
            _Info = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Info")
            OnInfoChanged()
        End Set
    End Property

    Private _Info As Global.System.String
    Private Partial Sub OnInfoChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnInfoChanged()
    End Sub

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    ''' <summary>
    ''' Нет доступной документации по метаданным.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property URI() As Global.System.String
        Get
            Return _URI
        End Get
        Set
            OnURIChanging(value)
            ReportPropertyChanging("URI")
            _URI = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("URI")
            OnURIChanged()
        End Set
    End Property

    Private _URI As Global.System.String
    Private Partial Sub OnURIChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnURIChanged()
    End Sub

    #End Region

End Class

#End Region


