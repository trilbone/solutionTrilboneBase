'------------------------------------------------------------------------------
' <auto-generated>
'     Этот код создан программой.
'     Исполняемая версия:4.0.30319.42000
'
'     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
'     повторной генерации кода.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DataSet_oldGoodMap"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DataSet_oldGoodMap
    Inherits Global.System.Data.DataSet
    
    Private tablegoodmaps As goodmapsDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("goodmaps")) Is Nothing) Then
                MyBase.Tables.Add(New goodmapsDataTable(ds.Tables("goodmaps")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property goodmaps() As goodmapsDataTable
        Get
            Return Me.tablegoodmaps
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DataSet_oldGoodMap = CType(MyBase.Clone,DataSet_oldGoodMap)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("goodmaps")) Is Nothing) Then
                MyBase.Tables.Add(New goodmapsDataTable(ds.Tables("goodmaps")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablegoodmaps = CType(MyBase.Tables("goodmaps"),goodmapsDataTable)
        If (initTable = true) Then
            If (Not (Me.tablegoodmaps) Is Nothing) Then
                Me.tablegoodmaps.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DataSet_oldGoodMap"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DataSet_oldGoodMap.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablegoodmaps = New goodmapsDataTable()
        MyBase.Tables.Add(Me.tablegoodmaps)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializegoodmaps() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DataSet_oldGoodMap = New DataSet_oldGoodMap()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub goodmapsRowChangeEventHandler(ByVal sender As Object, ByVal e As goodmapsRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class goodmapsDataTable
        Inherits Global.System.Data.TypedTableBase(Of goodmapsRow)
        
        Private columnГруппы As Global.System.Data.DataColumn
        
        Private columnКод As Global.System.Data.DataColumn
        
        Private columnНаименование As Global.System.Data.DataColumn
        
        Private columnВнешний_код As Global.System.Data.DataColumn
        
        Private columnАртикул As Global.System.Data.DataColumn
        
        Private columnЕдиница_измерения As Global.System.Data.DataColumn
        
        Private columnРозничная_цена_в_магазине As Global.System.Data.DataColumn
        
        Private _columnВалюта__Розничная_цена_в_магазине_ As Global.System.Data.DataColumn
        
        Private columnРозничная_в_офисе As Global.System.Data.DataColumn
        
        Private _columnВалюта__Розничная_в_офисе_ As Global.System.Data.DataColumn
        
        Private columnБуржуи_в_офисе As Global.System.Data.DataColumn
        
        Private _columnВалюта__Буржуи_в_офисе_ As Global.System.Data.DataColumn
        
        Private _columnПочтовая_банк_ As Global.System.Data.DataColumn
        
        Private _columnВалюта__Почтовая_банк__ As Global.System.Data.DataColumn
        
        Private _columnПочтовая_PayPal_ As Global.System.Data.DataColumn
        
        Private _columnВалюта__Почтовая_PayPal__ As Global.System.Data.DataColumn
        
        Private columnБуржуи_на_выставке As Global.System.Data.DataColumn
        
        Private _columnВалюта__Буржуи_на_выставке_ As Global.System.Data.DataColumn
        
        Private columnEBAY As Global.System.Data.DataColumn
        
        Private _columnВалюта__EBAY_ As Global.System.Data.DataColumn
        
        Private columnИнвойс As Global.System.Data.DataColumn
        
        Private _columnВалюта__Инвойс_ As Global.System.Data.DataColumn
        
        Private columnЗакупочная_цена As Global.System.Data.DataColumn
        
        Private _columnВалюта__Закупочная_цена_ As Global.System.Data.DataColumn
        
        Private columnНеснижаемый_остаток As Global.System.Data.DataColumn
        
        Private columnШтрихкод_EAN13 As Global.System.Data.DataColumn
        
        Private columnШтрихкод_EAN8 As Global.System.Data.DataColumn
        
        Private columnШтрихкод_Code128 As Global.System.Data.DataColumn
        
        Private columnОписание As Global.System.Data.DataColumn
        
        Private columnМинимальная_цена As Global.System.Data.DataColumn
        
        Private columnСтрана As Global.System.Data.DataColumn
        
        Private columnНДС As Global.System.Data.DataColumn
        
        Private columnПоставщик As Global.System.Data.DataColumn
        
        Private columnАрхивный As Global.System.Data.DataColumn
        
        Private columnВес As Global.System.Data.DataColumn
        
        Private columnОбъем As Global.System.Data.DataColumn
        
        Private columnКод_модификации As Global.System.Data.DataColumn
        
        Private columnОбразец_взят_на_комиссию As Global.System.Data.DataColumn
        
        Private columnСхема_расчета_выплат As Global.System.Data.DataColumn
        
        Private columnПроизводственный_номер_или_EAN13 As Global.System.Data.DataColumn
        
        Private columnОтветственный_Препаратор As Global.System.Data.DataColumn
        
        Private _columnВремя_препарации_в_часах__общее_ As Global.System.Data.DataColumn
        
        Private columnПрепараторы_и_время As Global.System.Data.DataColumn
        
        Private columnПолная_стоимость_препарации_в_рублях As Global.System.Data.DataColumn
        
        Private columnПолная_стоимость_закупки_в_рублях As Global.System.Data.DataColumn
        
        Private columnПроцент_прибыльности As Global.System.Data.DataColumn
        
        Private _columnЭкспедиция__код_ As Global.System.Data.DataColumn
        
        Private _columnЭкспедиционный_закупочный_номер As Global.System.Data.DataColumn
        
        Private _columnЭкспедиционное_закупочное_примечание As Global.System.Data.DataColumn
        
        Private columnТребуется_сделать_фото As Global.System.Data.DataColumn
        
        Private columnТребуется_сделать_этикетку As Global.System.Data.DataColumn
        
        Private columnТребуется_ремонт As Global.System.Data.DataColumn
        
        Private _columnТребуется_упаковка__коробочка_ As Global.System.Data.DataColumn
        
        Private columnТребуется_допрепарация As Global.System.Data.DataColumn
        
        Private columnДопрепарация_подробно As Global.System.Data.DataColumn
        
        Private columnКод_узла_дерева_описаний As Global.System.Data.DataColumn
        
        Private columnТип_упаковки As Global.System.Data.DataColumn
        
        Private _columnОформитель_товара__сотрудник_ As Global.System.Data.DataColumn
        
        Private _columnХарактеристика_Вырезанная_фигурка As Global.System.Data.DataColumn
        
        Private _columnХарактеристика_Цвет_и_ассоциация As Global.System.Data.DataColumn
        
        Private _columnХарактеристика_Качество_исходника As Global.System.Data.DataColumn
        
        Private _columnХарактеристика_Тип As Global.System.Data.DataColumn
        
        Private _columnХарактеристика_Кол_во_кристаллов As Global.System.Data.DataColumn
        
        Private _columnХарактеристика_Color As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "goodmaps"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ГруппыColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnГруппы
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property КодColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnКод
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property НаименованиеColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnНаименование
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Внешний_кодColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnВнешний_код
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property АртикулColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnАртикул
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Единица_измеренияColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnЕдиница_измерения
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Розничная_цена_в_магазинеColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnРозничная_цена_в_магазине
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _Валюта__Розничная_цена_в_магазине_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnВалюта__Розничная_цена_в_магазине_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Розничная_в_офисеColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnРозничная_в_офисе
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _Валюта__Розничная_в_офисе_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnВалюта__Розничная_в_офисе_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Буржуи_в_офисеColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnБуржуи_в_офисе
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _Валюта__Буржуи_в_офисе_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnВалюта__Буржуи_в_офисе_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _Почтовая_банк_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnПочтовая_банк_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _Валюта__Почтовая_банк__Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnВалюта__Почтовая_банк__
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _Почтовая_PayPal_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnПочтовая_PayPal_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _Валюта__Почтовая_PayPal__Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnВалюта__Почтовая_PayPal__
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Буржуи_на_выставкеColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnБуржуи_на_выставке
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _Валюта__Буржуи_на_выставке_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnВалюта__Буржуи_на_выставке_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EBAYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEBAY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _Валюта__EBAY_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnВалюта__EBAY_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ИнвойсColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnИнвойс
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _Валюта__Инвойс_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnВалюта__Инвойс_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Закупочная_ценаColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnЗакупочная_цена
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _Валюта__Закупочная_цена_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnВалюта__Закупочная_цена_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Неснижаемый_остатокColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnНеснижаемый_остаток
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Штрихкод_EAN13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnШтрихкод_EAN13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Штрихкод_EAN8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnШтрихкод_EAN8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Штрихкод_Code128Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnШтрихкод_Code128
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ОписаниеColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnОписание
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Минимальная_ценаColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnМинимальная_цена
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property СтранаColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnСтрана
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property НДСColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnНДС
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ПоставщикColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnПоставщик
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property АрхивныйColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnАрхивный
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ВесColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnВес
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ОбъемColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnОбъем
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Код_модификацииColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnКод_модификации
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Образец_взят_на_комиссиюColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnОбразец_взят_на_комиссию
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Схема_расчета_выплатColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnСхема_расчета_выплат
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Производственный_номер_или_EAN13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnПроизводственный_номер_или_EAN13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Ответственный_ПрепараторColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnОтветственный_Препаратор
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _Время_препарации_в_часах__общее_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnВремя_препарации_в_часах__общее_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Препараторы_и_времяColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnПрепараторы_и_время
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Полная_стоимость_препарации_в_рубляхColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnПолная_стоимость_препарации_в_рублях
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Полная_стоимость_закупки_в_рубляхColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnПолная_стоимость_закупки_в_рублях
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Процент_прибыльностиColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnПроцент_прибыльности
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _Экспедиция__код_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnЭкспедиция__код_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _Экспедиционный_закупочный_номерColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnЭкспедиционный_закупочный_номер
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _Экспедиционное_закупочное_примечаниеColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnЭкспедиционное_закупочное_примечание
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Требуется_сделать_фотоColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnТребуется_сделать_фото
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Требуется_сделать_этикеткуColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnТребуется_сделать_этикетку
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Требуется_ремонтColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnТребуется_ремонт
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _Требуется_упаковка__коробочка_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnТребуется_упаковка__коробочка_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Требуется_допрепарацияColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnТребуется_допрепарация
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Допрепарация_подробноColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnДопрепарация_подробно
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Код_узла_дерева_описанийColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnКод_узла_дерева_описаний
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Тип_упаковкиColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnТип_упаковки
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _Оформитель_товара__сотрудник_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnОформитель_товара__сотрудник_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _Характеристика_Вырезанная_фигуркаColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnХарактеристика_Вырезанная_фигурка
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _Характеристика_Цвет_и_ассоциацияColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnХарактеристика_Цвет_и_ассоциация
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _Характеристика_Качество_исходникаColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnХарактеристика_Качество_исходника
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _Характеристика_ТипColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnХарактеристика_Тип
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _Характеристика_Кол_во_кристалловColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnХарактеристика_Кол_во_кристаллов
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _Характеристика_ColorColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnХарактеристика_Color
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As goodmapsRow
            Get
                Return CType(Me.Rows(index),goodmapsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event goodmapsRowChanging As goodmapsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event goodmapsRowChanged As goodmapsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event goodmapsRowDeleting As goodmapsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event goodmapsRowDeleted As goodmapsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddgoodmapsRow(ByVal row As goodmapsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddgoodmapsRow( _
                    ByVal Группы As String,  _
                    ByVal Код As String,  _
                    ByVal Наименование As String,  _
                    ByVal Внешний_код As String,  _
                    ByVal Артикул As String,  _
                    ByVal Единица_измерения As String,  _
                    ByVal Розничная_цена_в_магазине As String,  _
                    ByVal _Валюта__Розничная_цена_в_магазине_ As String,  _
                    ByVal Розничная_в_офисе As String,  _
                    ByVal _Валюта__Розничная_в_офисе_ As String,  _
                    ByVal Буржуи_в_офисе As String,  _
                    ByVal _Валюта__Буржуи_в_офисе_ As String,  _
                    ByVal _Почтовая_банк_ As String,  _
                    ByVal _Валюта__Почтовая_банк__ As String,  _
                    ByVal _Почтовая_PayPal_ As String,  _
                    ByVal _Валюта__Почтовая_PayPal__ As String,  _
                    ByVal Буржуи_на_выставке As String,  _
                    ByVal _Валюта__Буржуи_на_выставке_ As String,  _
                    ByVal EBAY As String,  _
                    ByVal _Валюта__EBAY_ As String,  _
                    ByVal Инвойс As String,  _
                    ByVal _Валюта__Инвойс_ As String,  _
                    ByVal Закупочная_цена As String,  _
                    ByVal _Валюта__Закупочная_цена_ As String,  _
                    ByVal Неснижаемый_остаток As String,  _
                    ByVal Штрихкод_EAN13 As String,  _
                    ByVal Штрихкод_EAN8 As String,  _
                    ByVal Штрихкод_Code128 As String,  _
                    ByVal Описание As String,  _
                    ByVal Минимальная_цена As String,  _
                    ByVal Страна As String,  _
                    ByVal НДС As String,  _
                    ByVal Поставщик As String,  _
                    ByVal Архивный As String,  _
                    ByVal Вес As String,  _
                    ByVal Объем As String,  _
                    ByVal Код_модификации As String,  _
                    ByVal Образец_взят_на_комиссию As String,  _
                    ByVal Схема_расчета_выплат As String,  _
                    ByVal Производственный_номер_или_EAN13 As String,  _
                    ByVal Ответственный_Препаратор As String,  _
                    ByVal _Время_препарации_в_часах__общее_ As String,  _
                    ByVal Препараторы_и_время As String,  _
                    ByVal Полная_стоимость_препарации_в_рублях As String,  _
                    ByVal Полная_стоимость_закупки_в_рублях As String,  _
                    ByVal Процент_прибыльности As String,  _
                    ByVal _Экспедиция__код_ As String,  _
                    ByVal _Экспедиционный_закупочный_номер As String,  _
                    ByVal _Экспедиционное_закупочное_примечание As String,  _
                    ByVal Требуется_сделать_фото As String,  _
                    ByVal Требуется_сделать_этикетку As String,  _
                    ByVal Требуется_ремонт As String,  _
                    ByVal _Требуется_упаковка__коробочка_ As String,  _
                    ByVal Требуется_допрепарация As String,  _
                    ByVal Допрепарация_подробно As String,  _
                    ByVal Код_узла_дерева_описаний As String,  _
                    ByVal Тип_упаковки As String,  _
                    ByVal _Оформитель_товара__сотрудник_ As String,  _
                    ByVal _Характеристика_Вырезанная_фигурка As String,  _
                    ByVal _Характеристика_Цвет_и_ассоциация As String,  _
                    ByVal _Характеристика_Качество_исходника As String,  _
                    ByVal _Характеристика_Тип As String,  _
                    ByVal _Характеристика_Кол_во_кристаллов As String,  _
                    ByVal _Характеристика_Color As String) As goodmapsRow
            Dim rowgoodmapsRow As goodmapsRow = CType(Me.NewRow,goodmapsRow)
            Dim columnValuesArray() As Object = New Object() {Группы, Код, Наименование, Внешний_код, Артикул, Единица_измерения, Розничная_цена_в_магазине, _Валюта__Розничная_цена_в_магазине_, Розничная_в_офисе, _Валюта__Розничная_в_офисе_, Буржуи_в_офисе, _Валюта__Буржуи_в_офисе_, _Почтовая_банк_, _Валюта__Почтовая_банк__, _Почтовая_PayPal_, _Валюта__Почтовая_PayPal__, Буржуи_на_выставке, _Валюта__Буржуи_на_выставке_, EBAY, _Валюта__EBAY_, Инвойс, _Валюта__Инвойс_, Закупочная_цена, _Валюта__Закупочная_цена_, Неснижаемый_остаток, Штрихкод_EAN13, Штрихкод_EAN8, Штрихкод_Code128, Описание, Минимальная_цена, Страна, НДС, Поставщик, Архивный, Вес, Объем, Код_модификации, Образец_взят_на_комиссию, Схема_расчета_выплат, Производственный_номер_или_EAN13, Ответственный_Препаратор, _Время_препарации_в_часах__общее_, Препараторы_и_время, Полная_стоимость_препарации_в_рублях, Полная_стоимость_закупки_в_рублях, Процент_прибыльности, _Экспедиция__код_, _Экспедиционный_закупочный_номер, _Экспедиционное_закупочное_примечание, Требуется_сделать_фото, Требуется_сделать_этикетку, Требуется_ремонт, _Требуется_упаковка__коробочка_, Требуется_допрепарация, Допрепарация_подробно, Код_узла_дерева_описаний, Тип_упаковки, _Оформитель_товара__сотрудник_, _Характеристика_Вырезанная_фигурка, _Характеристика_Цвет_и_ассоциация, _Характеристика_Качество_исходника, _Характеристика_Тип, _Характеристика_Кол_во_кристаллов, _Характеристика_Color}
            rowgoodmapsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowgoodmapsRow)
            Return rowgoodmapsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As goodmapsDataTable = CType(MyBase.Clone,goodmapsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New goodmapsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnГруппы = MyBase.Columns("Группы")
            Me.columnКод = MyBase.Columns("Код")
            Me.columnНаименование = MyBase.Columns("Наименование")
            Me.columnВнешний_код = MyBase.Columns("Внешний код")
            Me.columnАртикул = MyBase.Columns("Артикул")
            Me.columnЕдиница_измерения = MyBase.Columns("Единица измерения")
            Me.columnРозничная_цена_в_магазине = MyBase.Columns("Розничная цена в магазине")
            Me._columnВалюта__Розничная_цена_в_магазине_ = MyBase.Columns("Валюта (Розничная цена в магазине)")
            Me.columnРозничная_в_офисе = MyBase.Columns("Розничная в офисе")
            Me._columnВалюта__Розничная_в_офисе_ = MyBase.Columns("Валюта (Розничная в офисе)")
            Me.columnБуржуи_в_офисе = MyBase.Columns("Буржуи в офисе")
            Me._columnВалюта__Буржуи_в_офисе_ = MyBase.Columns("Валюта (Буржуи в офисе)")
            Me._columnПочтовая_банк_ = MyBase.Columns("Почтовая(банк)")
            Me._columnВалюта__Почтовая_банк__ = MyBase.Columns("Валюта (Почтовая(банк))")
            Me._columnПочтовая_PayPal_ = MyBase.Columns("Почтовая(PayPal)")
            Me._columnВалюта__Почтовая_PayPal__ = MyBase.Columns("Валюта (Почтовая(PayPal))")
            Me.columnБуржуи_на_выставке = MyBase.Columns("Буржуи на выставке")
            Me._columnВалюта__Буржуи_на_выставке_ = MyBase.Columns("Валюта (Буржуи на выставке)")
            Me.columnEBAY = MyBase.Columns("EBAY")
            Me._columnВалюта__EBAY_ = MyBase.Columns("Валюта (EBAY)")
            Me.columnИнвойс = MyBase.Columns("Инвойс")
            Me._columnВалюта__Инвойс_ = MyBase.Columns("Валюта (Инвойс)")
            Me.columnЗакупочная_цена = MyBase.Columns("Закупочная цена")
            Me._columnВалюта__Закупочная_цена_ = MyBase.Columns("Валюта (Закупочная цена)")
            Me.columnНеснижаемый_остаток = MyBase.Columns("Неснижаемый остаток")
            Me.columnШтрихкод_EAN13 = MyBase.Columns("Штрихкод EAN13")
            Me.columnШтрихкод_EAN8 = MyBase.Columns("Штрихкод EAN8")
            Me.columnШтрихкод_Code128 = MyBase.Columns("Штрихкод Code128")
            Me.columnОписание = MyBase.Columns("Описание")
            Me.columnМинимальная_цена = MyBase.Columns("Минимальная цена")
            Me.columnСтрана = MyBase.Columns("Страна")
            Me.columnНДС = MyBase.Columns("НДС")
            Me.columnПоставщик = MyBase.Columns("Поставщик")
            Me.columnАрхивный = MyBase.Columns("Архивный")
            Me.columnВес = MyBase.Columns("Вес")
            Me.columnОбъем = MyBase.Columns("Объем")
            Me.columnКод_модификации = MyBase.Columns("Код модификации")
            Me.columnОбразец_взят_на_комиссию = MyBase.Columns("Образец взят на комиссию")
            Me.columnСхема_расчета_выплат = MyBase.Columns("Схема расчета выплат")
            Me.columnПроизводственный_номер_или_EAN13 = MyBase.Columns("Производственный номер или EAN13")
            Me.columnОтветственный_Препаратор = MyBase.Columns("Ответственный Препаратор")
            Me._columnВремя_препарации_в_часах__общее_ = MyBase.Columns("Время препарации в часах (общее)")
            Me.columnПрепараторы_и_время = MyBase.Columns("Препараторы и время")
            Me.columnПолная_стоимость_препарации_в_рублях = MyBase.Columns("Полная стоимость препарации в рублях")
            Me.columnПолная_стоимость_закупки_в_рублях = MyBase.Columns("Полная стоимость закупки в рублях")
            Me.columnПроцент_прибыльности = MyBase.Columns("Процент прибыльности")
            Me._columnЭкспедиция__код_ = MyBase.Columns("Экспедиция (код)")
            Me._columnЭкспедиционный_закупочный_номер = MyBase.Columns("Экспедиционный/закупочный номер")
            Me._columnЭкспедиционное_закупочное_примечание = MyBase.Columns("Экспедиционное/закупочное примечание")
            Me.columnТребуется_сделать_фото = MyBase.Columns("Требуется сделать фото")
            Me.columnТребуется_сделать_этикетку = MyBase.Columns("Требуется сделать этикетку")
            Me.columnТребуется_ремонт = MyBase.Columns("Требуется ремонт")
            Me._columnТребуется_упаковка__коробочка_ = MyBase.Columns("Требуется упаковка (коробочка)")
            Me.columnТребуется_допрепарация = MyBase.Columns("Требуется допрепарация")
            Me.columnДопрепарация_подробно = MyBase.Columns("Допрепарация подробно")
            Me.columnКод_узла_дерева_описаний = MyBase.Columns("Код узла дерева описаний")
            Me.columnТип_упаковки = MyBase.Columns("Тип упаковки")
            Me._columnОформитель_товара__сотрудник_ = MyBase.Columns("Оформитель товара (сотрудник)")
            Me._columnХарактеристика_Вырезанная_фигурка = MyBase.Columns("Характеристика:Вырезанная фигурка")
            Me._columnХарактеристика_Цвет_и_ассоциация = MyBase.Columns("Характеристика:Цвет и ассоциация")
            Me._columnХарактеристика_Качество_исходника = MyBase.Columns("Характеристика:Качество исходника")
            Me._columnХарактеристика_Тип = MyBase.Columns("Характеристика:Тип")
            Me._columnХарактеристика_Кол_во_кристаллов = MyBase.Columns("Характеристика:Кол-во кристаллов")
            Me._columnХарактеристика_Color = MyBase.Columns("Характеристика:Color")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnГруппы = New Global.System.Data.DataColumn("Группы", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnГруппы)
            Me.columnКод = New Global.System.Data.DataColumn("Код", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnКод)
            Me.columnНаименование = New Global.System.Data.DataColumn("Наименование", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnНаименование)
            Me.columnВнешний_код = New Global.System.Data.DataColumn("Внешний код", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnВнешний_код)
            Me.columnАртикул = New Global.System.Data.DataColumn("Артикул", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnАртикул)
            Me.columnЕдиница_измерения = New Global.System.Data.DataColumn("Единица измерения", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnЕдиница_измерения)
            Me.columnРозничная_цена_в_магазине = New Global.System.Data.DataColumn("Розничная цена в магазине", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnРозничная_цена_в_магазине)
            Me._columnВалюта__Розничная_цена_в_магазине_ = New Global.System.Data.DataColumn("Валюта (Розничная цена в магазине)", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnВалюта__Розничная_цена_в_магазине_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnВалюта__Розничная_цена_в_магазине_")
            Me._columnВалюта__Розничная_цена_в_магазине_.ExtendedProperties.Add("Generator_UserColumnName", "Валюта (Розничная цена в магазине)")
            MyBase.Columns.Add(Me._columnВалюта__Розничная_цена_в_магазине_)
            Me.columnРозничная_в_офисе = New Global.System.Data.DataColumn("Розничная в офисе", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnРозничная_в_офисе)
            Me._columnВалюта__Розничная_в_офисе_ = New Global.System.Data.DataColumn("Валюта (Розничная в офисе)", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnВалюта__Розничная_в_офисе_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnВалюта__Розничная_в_офисе_")
            Me._columnВалюта__Розничная_в_офисе_.ExtendedProperties.Add("Generator_UserColumnName", "Валюта (Розничная в офисе)")
            MyBase.Columns.Add(Me._columnВалюта__Розничная_в_офисе_)
            Me.columnБуржуи_в_офисе = New Global.System.Data.DataColumn("Буржуи в офисе", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnБуржуи_в_офисе)
            Me._columnВалюта__Буржуи_в_офисе_ = New Global.System.Data.DataColumn("Валюта (Буржуи в офисе)", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnВалюта__Буржуи_в_офисе_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnВалюта__Буржуи_в_офисе_")
            Me._columnВалюта__Буржуи_в_офисе_.ExtendedProperties.Add("Generator_UserColumnName", "Валюта (Буржуи в офисе)")
            MyBase.Columns.Add(Me._columnВалюта__Буржуи_в_офисе_)
            Me._columnПочтовая_банк_ = New Global.System.Data.DataColumn("Почтовая(банк)", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnПочтовая_банк_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnПочтовая_банк_")
            Me._columnПочтовая_банк_.ExtendedProperties.Add("Generator_UserColumnName", "Почтовая(банк)")
            MyBase.Columns.Add(Me._columnПочтовая_банк_)
            Me._columnВалюта__Почтовая_банк__ = New Global.System.Data.DataColumn("Валюта (Почтовая(банк))", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnВалюта__Почтовая_банк__.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnВалюта__Почтовая_банк__")
            Me._columnВалюта__Почтовая_банк__.ExtendedProperties.Add("Generator_UserColumnName", "Валюта (Почтовая(банк))")
            MyBase.Columns.Add(Me._columnВалюта__Почтовая_банк__)
            Me._columnПочтовая_PayPal_ = New Global.System.Data.DataColumn("Почтовая(PayPal)", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnПочтовая_PayPal_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnПочтовая_PayPal_")
            Me._columnПочтовая_PayPal_.ExtendedProperties.Add("Generator_UserColumnName", "Почтовая(PayPal)")
            MyBase.Columns.Add(Me._columnПочтовая_PayPal_)
            Me._columnВалюта__Почтовая_PayPal__ = New Global.System.Data.DataColumn("Валюта (Почтовая(PayPal))", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnВалюта__Почтовая_PayPal__.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnВалюта__Почтовая_PayPal__")
            Me._columnВалюта__Почтовая_PayPal__.ExtendedProperties.Add("Generator_UserColumnName", "Валюта (Почтовая(PayPal))")
            MyBase.Columns.Add(Me._columnВалюта__Почтовая_PayPal__)
            Me.columnБуржуи_на_выставке = New Global.System.Data.DataColumn("Буржуи на выставке", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnБуржуи_на_выставке)
            Me._columnВалюта__Буржуи_на_выставке_ = New Global.System.Data.DataColumn("Валюта (Буржуи на выставке)", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnВалюта__Буржуи_на_выставке_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnВалюта__Буржуи_на_выставке_")
            Me._columnВалюта__Буржуи_на_выставке_.ExtendedProperties.Add("Generator_UserColumnName", "Валюта (Буржуи на выставке)")
            MyBase.Columns.Add(Me._columnВалюта__Буржуи_на_выставке_)
            Me.columnEBAY = New Global.System.Data.DataColumn("EBAY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEBAY)
            Me._columnВалюта__EBAY_ = New Global.System.Data.DataColumn("Валюта (EBAY)", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnВалюта__EBAY_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnВалюта__EBAY_")
            Me._columnВалюта__EBAY_.ExtendedProperties.Add("Generator_UserColumnName", "Валюта (EBAY)")
            MyBase.Columns.Add(Me._columnВалюта__EBAY_)
            Me.columnИнвойс = New Global.System.Data.DataColumn("Инвойс", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnИнвойс)
            Me._columnВалюта__Инвойс_ = New Global.System.Data.DataColumn("Валюта (Инвойс)", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnВалюта__Инвойс_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnВалюта__Инвойс_")
            Me._columnВалюта__Инвойс_.ExtendedProperties.Add("Generator_UserColumnName", "Валюта (Инвойс)")
            MyBase.Columns.Add(Me._columnВалюта__Инвойс_)
            Me.columnЗакупочная_цена = New Global.System.Data.DataColumn("Закупочная цена", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnЗакупочная_цена)
            Me._columnВалюта__Закупочная_цена_ = New Global.System.Data.DataColumn("Валюта (Закупочная цена)", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnВалюта__Закупочная_цена_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnВалюта__Закупочная_цена_")
            Me._columnВалюта__Закупочная_цена_.ExtendedProperties.Add("Generator_UserColumnName", "Валюта (Закупочная цена)")
            MyBase.Columns.Add(Me._columnВалюта__Закупочная_цена_)
            Me.columnНеснижаемый_остаток = New Global.System.Data.DataColumn("Неснижаемый остаток", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnНеснижаемый_остаток)
            Me.columnШтрихкод_EAN13 = New Global.System.Data.DataColumn("Штрихкод EAN13", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnШтрихкод_EAN13)
            Me.columnШтрихкод_EAN8 = New Global.System.Data.DataColumn("Штрихкод EAN8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnШтрихкод_EAN8)
            Me.columnШтрихкод_Code128 = New Global.System.Data.DataColumn("Штрихкод Code128", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnШтрихкод_Code128)
            Me.columnОписание = New Global.System.Data.DataColumn("Описание", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnОписание)
            Me.columnМинимальная_цена = New Global.System.Data.DataColumn("Минимальная цена", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnМинимальная_цена)
            Me.columnСтрана = New Global.System.Data.DataColumn("Страна", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnСтрана)
            Me.columnНДС = New Global.System.Data.DataColumn("НДС", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnНДС)
            Me.columnПоставщик = New Global.System.Data.DataColumn("Поставщик", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnПоставщик)
            Me.columnАрхивный = New Global.System.Data.DataColumn("Архивный", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnАрхивный)
            Me.columnВес = New Global.System.Data.DataColumn("Вес", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnВес)
            Me.columnОбъем = New Global.System.Data.DataColumn("Объем", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnОбъем)
            Me.columnКод_модификации = New Global.System.Data.DataColumn("Код модификации", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnКод_модификации)
            Me.columnОбразец_взят_на_комиссию = New Global.System.Data.DataColumn("Образец взят на комиссию", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnОбразец_взят_на_комиссию)
            Me.columnСхема_расчета_выплат = New Global.System.Data.DataColumn("Схема расчета выплат", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnСхема_расчета_выплат)
            Me.columnПроизводственный_номер_или_EAN13 = New Global.System.Data.DataColumn("Производственный номер или EAN13", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnПроизводственный_номер_или_EAN13)
            Me.columnОтветственный_Препаратор = New Global.System.Data.DataColumn("Ответственный Препаратор", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnОтветственный_Препаратор)
            Me._columnВремя_препарации_в_часах__общее_ = New Global.System.Data.DataColumn("Время препарации в часах (общее)", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnВремя_препарации_в_часах__общее_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnВремя_препарации_в_часах__общее_")
            Me._columnВремя_препарации_в_часах__общее_.ExtendedProperties.Add("Generator_UserColumnName", "Время препарации в часах (общее)")
            MyBase.Columns.Add(Me._columnВремя_препарации_в_часах__общее_)
            Me.columnПрепараторы_и_время = New Global.System.Data.DataColumn("Препараторы и время", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnПрепараторы_и_время)
            Me.columnПолная_стоимость_препарации_в_рублях = New Global.System.Data.DataColumn("Полная стоимость препарации в рублях", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnПолная_стоимость_препарации_в_рублях)
            Me.columnПолная_стоимость_закупки_в_рублях = New Global.System.Data.DataColumn("Полная стоимость закупки в рублях", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnПолная_стоимость_закупки_в_рублях)
            Me.columnПроцент_прибыльности = New Global.System.Data.DataColumn("Процент прибыльности", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnПроцент_прибыльности)
            Me._columnЭкспедиция__код_ = New Global.System.Data.DataColumn("Экспедиция (код)", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnЭкспедиция__код_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnЭкспедиция__код_")
            Me._columnЭкспедиция__код_.ExtendedProperties.Add("Generator_UserColumnName", "Экспедиция (код)")
            MyBase.Columns.Add(Me._columnЭкспедиция__код_)
            Me._columnЭкспедиционный_закупочный_номер = New Global.System.Data.DataColumn("Экспедиционный/закупочный номер", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnЭкспедиционный_закупочный_номер.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnЭкспедиционный_закупочный_номер")
            Me._columnЭкспедиционный_закупочный_номер.ExtendedProperties.Add("Generator_UserColumnName", "Экспедиционный/закупочный номер")
            MyBase.Columns.Add(Me._columnЭкспедиционный_закупочный_номер)
            Me._columnЭкспедиционное_закупочное_примечание = New Global.System.Data.DataColumn("Экспедиционное/закупочное примечание", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnЭкспедиционное_закупочное_примечание.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnЭкспедиционное_закупочное_примечание")
            Me._columnЭкспедиционное_закупочное_примечание.ExtendedProperties.Add("Generator_UserColumnName", "Экспедиционное/закупочное примечание")
            MyBase.Columns.Add(Me._columnЭкспедиционное_закупочное_примечание)
            Me.columnТребуется_сделать_фото = New Global.System.Data.DataColumn("Требуется сделать фото", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnТребуется_сделать_фото)
            Me.columnТребуется_сделать_этикетку = New Global.System.Data.DataColumn("Требуется сделать этикетку", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnТребуется_сделать_этикетку)
            Me.columnТребуется_ремонт = New Global.System.Data.DataColumn("Требуется ремонт", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnТребуется_ремонт)
            Me._columnТребуется_упаковка__коробочка_ = New Global.System.Data.DataColumn("Требуется упаковка (коробочка)", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnТребуется_упаковка__коробочка_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnТребуется_упаковка__коробочка_")
            Me._columnТребуется_упаковка__коробочка_.ExtendedProperties.Add("Generator_UserColumnName", "Требуется упаковка (коробочка)")
            MyBase.Columns.Add(Me._columnТребуется_упаковка__коробочка_)
            Me.columnТребуется_допрепарация = New Global.System.Data.DataColumn("Требуется допрепарация", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnТребуется_допрепарация)
            Me.columnДопрепарация_подробно = New Global.System.Data.DataColumn("Допрепарация подробно", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnДопрепарация_подробно)
            Me.columnКод_узла_дерева_описаний = New Global.System.Data.DataColumn("Код узла дерева описаний", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnКод_узла_дерева_описаний)
            Me.columnТип_упаковки = New Global.System.Data.DataColumn("Тип упаковки", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnТип_упаковки)
            Me._columnОформитель_товара__сотрудник_ = New Global.System.Data.DataColumn("Оформитель товара (сотрудник)", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnОформитель_товара__сотрудник_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnОформитель_товара__сотрудник_")
            Me._columnОформитель_товара__сотрудник_.ExtendedProperties.Add("Generator_UserColumnName", "Оформитель товара (сотрудник)")
            MyBase.Columns.Add(Me._columnОформитель_товара__сотрудник_)
            Me._columnХарактеристика_Вырезанная_фигурка = New Global.System.Data.DataColumn("Характеристика:Вырезанная фигурка", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnХарактеристика_Вырезанная_фигурка.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnХарактеристика_Вырезанная_фигурка")
            Me._columnХарактеристика_Вырезанная_фигурка.ExtendedProperties.Add("Generator_UserColumnName", "Характеристика:Вырезанная фигурка")
            MyBase.Columns.Add(Me._columnХарактеристика_Вырезанная_фигурка)
            Me._columnХарактеристика_Цвет_и_ассоциация = New Global.System.Data.DataColumn("Характеристика:Цвет и ассоциация", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnХарактеристика_Цвет_и_ассоциация.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnХарактеристика_Цвет_и_ассоциация")
            Me._columnХарактеристика_Цвет_и_ассоциация.ExtendedProperties.Add("Generator_UserColumnName", "Характеристика:Цвет и ассоциация")
            MyBase.Columns.Add(Me._columnХарактеристика_Цвет_и_ассоциация)
            Me._columnХарактеристика_Качество_исходника = New Global.System.Data.DataColumn("Характеристика:Качество исходника", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnХарактеристика_Качество_исходника.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnХарактеристика_Качество_исходника")
            Me._columnХарактеристика_Качество_исходника.ExtendedProperties.Add("Generator_UserColumnName", "Характеристика:Качество исходника")
            MyBase.Columns.Add(Me._columnХарактеристика_Качество_исходника)
            Me._columnХарактеристика_Тип = New Global.System.Data.DataColumn("Характеристика:Тип", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnХарактеристика_Тип.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnХарактеристика_Тип")
            Me._columnХарактеристика_Тип.ExtendedProperties.Add("Generator_UserColumnName", "Характеристика:Тип")
            MyBase.Columns.Add(Me._columnХарактеристика_Тип)
            Me._columnХарактеристика_Кол_во_кристаллов = New Global.System.Data.DataColumn("Характеристика:Кол-во кристаллов", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnХарактеристика_Кол_во_кристаллов.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnХарактеристика_Кол_во_кристаллов")
            Me._columnХарактеристика_Кол_во_кристаллов.ExtendedProperties.Add("Generator_UserColumnName", "Характеристика:Кол-во кристаллов")
            MyBase.Columns.Add(Me._columnХарактеристика_Кол_во_кристаллов)
            Me._columnХарактеристика_Color = New Global.System.Data.DataColumn("Характеристика:Color", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnХарактеристика_Color.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnХарактеристика_Color")
            Me._columnХарактеристика_Color.ExtendedProperties.Add("Generator_UserColumnName", "Характеристика:Color")
            MyBase.Columns.Add(Me._columnХарактеристика_Color)
            Me.columnГруппы.DefaultValue = CType("",String)
            Me.columnГруппы.MaxLength = 500
            Me.columnКод.DefaultValue = CType("", String)
            Me.columnКод.MaxLength = 255
            Me.columnНаименование.DefaultValue = CType("", String)
            Me.columnНаименование.MaxLength = 500
            Me.columnВнешний_код.DefaultValue = CType("", String)
            Me.columnВнешний_код.MaxLength = 255
            Me.columnАртикул.DefaultValue = CType("", String)
            Me.columnАртикул.MaxLength = 255
            Me.columnЕдиница_измерения.DefaultValue = CType("", String)
            Me.columnЕдиница_измерения.MaxLength = 255
            Me.columnРозничная_цена_в_магазине.DefaultValue = CType("", String)
            Me.columnРозничная_цена_в_магазине.MaxLength = 255
            Me._columnВалюта__Розничная_цена_в_магазине_.DefaultValue = CType("", String)
            Me._columnВалюта__Розничная_цена_в_магазине_.MaxLength = 255
            Me.columnРозничная_в_офисе.DefaultValue = CType("", String)
            Me.columnРозничная_в_офисе.MaxLength = 255
            Me._columnВалюта__Розничная_в_офисе_.DefaultValue = CType("", String)
            Me._columnВалюта__Розничная_в_офисе_.MaxLength = 255
            Me.columnБуржуи_в_офисе.DefaultValue = CType("", String)
            Me.columnБуржуи_в_офисе.MaxLength = 255
            Me._columnВалюта__Буржуи_в_офисе_.DefaultValue = CType("", String)
            Me._columnВалюта__Буржуи_в_офисе_.MaxLength = 255
            Me._columnПочтовая_банк_.DefaultValue = CType("", String)
            Me._columnПочтовая_банк_.MaxLength = 255
            Me._columnВалюта__Почтовая_банк__.DefaultValue = CType("", String)
            Me._columnВалюта__Почтовая_банк__.MaxLength = 255
            Me._columnПочтовая_PayPal_.DefaultValue = CType("", String)
            Me._columnПочтовая_PayPal_.MaxLength = 255
            Me._columnВалюта__Почтовая_PayPal__.DefaultValue = CType("", String)
            Me._columnВалюта__Почтовая_PayPal__.MaxLength = 255
            Me.columnБуржуи_на_выставке.DefaultValue = CType("", String)
            Me.columnБуржуи_на_выставке.MaxLength = 255
            Me._columnВалюта__Буржуи_на_выставке_.DefaultValue = CType("", String)
            Me._columnВалюта__Буржуи_на_выставке_.MaxLength = 255
            Me.columnEBAY.DefaultValue = CType("", String)
            Me.columnEBAY.MaxLength = 255
            Me._columnВалюта__EBAY_.DefaultValue = CType("", String)
            Me._columnВалюта__EBAY_.MaxLength = 255
            Me.columnИнвойс.DefaultValue = CType("", String)
            Me.columnИнвойс.MaxLength = 255
            Me._columnВалюта__Инвойс_.DefaultValue = CType("", String)
            Me._columnВалюта__Инвойс_.MaxLength = 255
            Me.columnЗакупочная_цена.DefaultValue = CType("", String)
            Me.columnЗакупочная_цена.MaxLength = 255
            Me._columnВалюта__Закупочная_цена_.DefaultValue = CType("", String)
            Me._columnВалюта__Закупочная_цена_.MaxLength = 255
            Me.columnНеснижаемый_остаток.DefaultValue = CType("", String)
            Me.columnНеснижаемый_остаток.MaxLength = 255
            Me.columnШтрихкод_EAN13.DefaultValue = CType("", String)
            Me.columnШтрихкод_EAN13.MaxLength = 255
            Me.columnШтрихкод_EAN8.DefaultValue = CType("", String)
            Me.columnШтрихкод_EAN8.MaxLength = 255
            Me.columnШтрихкод_Code128.DefaultValue = CType("", String)
            Me.columnШтрихкод_Code128.MaxLength = 255
            Me.columnОписание.DefaultValue = CType("", String)
            Me.columnОписание.MaxLength = 255
            Me.columnМинимальная_цена.DefaultValue = CType("", String)
            Me.columnМинимальная_цена.MaxLength = 255
            Me.columnСтрана.DefaultValue = CType("", String)
            Me.columnСтрана.MaxLength = 255
            Me.columnНДС.DefaultValue = CType("", String)
            Me.columnНДС.MaxLength = 255
            Me.columnПоставщик.DefaultValue = CType("", String)
            Me.columnПоставщик.MaxLength = 255
            Me.columnАрхивный.DefaultValue = CType("", String)
            Me.columnАрхивный.MaxLength = 255
            Me.columnВес.DefaultValue = CType("", String)
            Me.columnВес.MaxLength = 255
            Me.columnОбъем.DefaultValue = CType("", String)
            Me.columnОбъем.MaxLength = 255
            Me.columnКод_модификации.DefaultValue = CType("", String)
            Me.columnКод_модификации.MaxLength = 255
            Me.columnОбразец_взят_на_комиссию.DefaultValue = CType("", String)
            Me.columnОбразец_взят_на_комиссию.MaxLength = 255
            Me.columnСхема_расчета_выплат.DefaultValue = CType("", String)
            Me.columnСхема_расчета_выплат.MaxLength = 255
            Me.columnПроизводственный_номер_или_EAN13.DefaultValue = CType("", String)
            Me.columnПроизводственный_номер_или_EAN13.MaxLength = 255
            Me.columnОтветственный_Препаратор.DefaultValue = CType("", String)
            Me.columnОтветственный_Препаратор.MaxLength = 255
            Me._columnВремя_препарации_в_часах__общее_.DefaultValue = CType("", String)
            Me._columnВремя_препарации_в_часах__общее_.MaxLength = 255
            Me.columnПрепараторы_и_время.DefaultValue = CType("", String)
            Me.columnПрепараторы_и_время.MaxLength = 255
            Me.columnПолная_стоимость_препарации_в_рублях.DefaultValue = CType("", String)
            Me.columnПолная_стоимость_препарации_в_рублях.MaxLength = 255
            Me.columnПолная_стоимость_закупки_в_рублях.DefaultValue = CType("", String)
            Me.columnПолная_стоимость_закупки_в_рублях.MaxLength = 255
            Me.columnПроцент_прибыльности.DefaultValue = CType("", String)
            Me.columnПроцент_прибыльности.MaxLength = 255
            Me._columnЭкспедиция__код_.DefaultValue = CType("", String)
            Me._columnЭкспедиция__код_.MaxLength = 255
            Me._columnЭкспедиционный_закупочный_номер.DefaultValue = CType("", String)
            Me._columnЭкспедиционный_закупочный_номер.MaxLength = 255
            Me._columnЭкспедиционное_закупочное_примечание.DefaultValue = CType("", String)
            Me._columnЭкспедиционное_закупочное_примечание.MaxLength = 255
            Me.columnТребуется_сделать_фото.DefaultValue = CType("", String)
            Me.columnТребуется_сделать_фото.MaxLength = 255
            Me.columnТребуется_сделать_этикетку.DefaultValue = CType("", String)
            Me.columnТребуется_сделать_этикетку.MaxLength = 255
            Me.columnТребуется_ремонт.DefaultValue = CType("", String)
            Me.columnТребуется_ремонт.MaxLength = 255
            Me._columnТребуется_упаковка__коробочка_.DefaultValue = CType("", String)
            Me._columnТребуется_упаковка__коробочка_.MaxLength = 255
            Me.columnТребуется_допрепарация.DefaultValue = CType("", String)
            Me.columnТребуется_допрепарация.MaxLength = 255
            Me.columnДопрепарация_подробно.DefaultValue = CType("", String)
            Me.columnДопрепарация_подробно.MaxLength = 255
            Me.columnКод_узла_дерева_описаний.DefaultValue = CType("", String)
            Me.columnКод_узла_дерева_описаний.MaxLength = 255
            Me.columnТип_упаковки.DefaultValue = CType("", String)
            Me.columnТип_упаковки.MaxLength = 255
            Me._columnОформитель_товара__сотрудник_.DefaultValue = CType("", String)
            Me._columnОформитель_товара__сотрудник_.MaxLength = 255
            Me._columnХарактеристика_Вырезанная_фигурка.DefaultValue = CType("", String)
            Me._columnХарактеристика_Вырезанная_фигурка.MaxLength = 255
            Me._columnХарактеристика_Цвет_и_ассоциация.DefaultValue = CType("", String)
            Me._columnХарактеристика_Цвет_и_ассоциация.MaxLength = 255
            Me._columnХарактеристика_Качество_исходника.DefaultValue = CType("", String)
            Me._columnХарактеристика_Качество_исходника.MaxLength = 255
            Me._columnХарактеристика_Тип.DefaultValue = CType("", String)
            Me._columnХарактеристика_Тип.MaxLength = 255
            Me._columnХарактеристика_Кол_во_кристаллов.DefaultValue = CType("", String)
            Me._columnХарактеристика_Кол_во_кристаллов.MaxLength = 255
            Me._columnХарактеристика_Color.DefaultValue = CType("", String)
            Me._columnХарактеристика_Color.MaxLength = 255
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewgoodmapsRow() As goodmapsRow
            Return CType(Me.NewRow, goodmapsRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New goodmapsRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(goodmapsRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.goodmapsRowChangedEvent) Is Nothing) Then
                RaiseEvent goodmapsRowChanged(Me, New goodmapsRowChangeEvent(CType(e.Row, goodmapsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.goodmapsRowChangingEvent) Is Nothing) Then
                RaiseEvent goodmapsRowChanging(Me, New goodmapsRowChangeEvent(CType(e.Row, goodmapsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.goodmapsRowDeletedEvent) Is Nothing) Then
                RaiseEvent goodmapsRowDeleted(Me, New goodmapsRowChangeEvent(CType(e.Row, goodmapsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.goodmapsRowDeletingEvent) Is Nothing) Then
                RaiseEvent goodmapsRowDeleting(Me, New goodmapsRowChangeEvent(CType(e.Row, goodmapsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemovegoodmapsRow(ByVal row As goodmapsRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet_oldGoodMap = New DataSet_oldGoodMap()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "goodmapsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class goodmapsRow
        Inherits Global.System.Data.DataRow

        Private tablegoodmaps As goodmapsDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablegoodmaps = CType(Me.Table, goodmapsDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Группы() As String
            Get
                If Me.IsГруппыNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.ГруппыColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.ГруппыColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Код() As String
            Get
                If Me.IsКодNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.КодColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.КодColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Наименование() As String
            Get
                If Me.IsНаименованиеNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.НаименованиеColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.НаименованиеColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Внешний_код() As String
            Get
                If Me.IsВнешний_кодNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.Внешний_кодColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.Внешний_кодColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Артикул() As String
            Get
                If Me.IsАртикулNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.АртикулColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.АртикулColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Единица_измерения() As String
            Get
                If Me.IsЕдиница_измеренияNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.Единица_измеренияColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.Единица_измеренияColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Розничная_цена_в_магазине() As String
            Get
                If Me.IsРозничная_цена_в_магазинеNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.Розничная_цена_в_магазинеColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.Розничная_цена_в_магазинеColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property _Валюта__Розничная_цена_в_магазине_() As String
            Get
                If Me.Is_Валюта__Розничная_цена_в_магазине_Null Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps._Валюта__Розничная_цена_в_магазине_Column), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps._Валюта__Розничная_цена_в_магазине_Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Розничная_в_офисе() As String
            Get
                If Me.IsРозничная_в_офисеNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.Розничная_в_офисеColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.Розничная_в_офисеColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property _Валюта__Розничная_в_офисе_() As String
            Get
                If Me.Is_Валюта__Розничная_в_офисе_Null Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps._Валюта__Розничная_в_офисе_Column), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps._Валюта__Розничная_в_офисе_Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Буржуи_в_офисе() As String
            Get
                If Me.IsБуржуи_в_офисеNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.Буржуи_в_офисеColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.Буржуи_в_офисеColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property _Валюта__Буржуи_в_офисе_() As String
            Get
                If Me.Is_Валюта__Буржуи_в_офисе_Null Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps._Валюта__Буржуи_в_офисе_Column), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps._Валюта__Буржуи_в_офисе_Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property _Почтовая_банк_() As String
            Get
                If Me.Is_Почтовая_банк_Null Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps._Почтовая_банк_Column), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps._Почтовая_банк_Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property _Валюта__Почтовая_банк__() As String
            Get
                If Me.Is_Валюта__Почтовая_банк__Null Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps._Валюта__Почтовая_банк__Column), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps._Валюта__Почтовая_банк__Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property _Почтовая_PayPal_() As String
            Get
                If Me.Is_Почтовая_PayPal_Null Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps._Почтовая_PayPal_Column), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps._Почтовая_PayPal_Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property _Валюта__Почтовая_PayPal__() As String
            Get
                If Me.Is_Валюта__Почтовая_PayPal__Null Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps._Валюта__Почтовая_PayPal__Column), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps._Валюта__Почтовая_PayPal__Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Буржуи_на_выставке() As String
            Get
                If Me.IsБуржуи_на_выставкеNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.Буржуи_на_выставкеColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.Буржуи_на_выставкеColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property _Валюта__Буржуи_на_выставке_() As String
            Get
                If Me.Is_Валюта__Буржуи_на_выставке_Null Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps._Валюта__Буржуи_на_выставке_Column), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps._Валюта__Буржуи_на_выставке_Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EBAY() As String
            Get
                If Me.IsEBAYNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.EBAYColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.EBAYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property _Валюта__EBAY_() As String
            Get
                If Me.Is_Валюта__EBAY_Null Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps._Валюта__EBAY_Column), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps._Валюта__EBAY_Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Инвойс() As String
            Get
                If Me.IsИнвойсNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.ИнвойсColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.ИнвойсColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property _Валюта__Инвойс_() As String
            Get
                If Me.Is_Валюта__Инвойс_Null Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps._Валюта__Инвойс_Column), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps._Валюта__Инвойс_Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Закупочная_цена() As String
            Get
                If Me.IsЗакупочная_ценаNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.Закупочная_ценаColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.Закупочная_ценаColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property _Валюта__Закупочная_цена_() As String
            Get
                If Me.Is_Валюта__Закупочная_цена_Null Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps._Валюта__Закупочная_цена_Column), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps._Валюта__Закупочная_цена_Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Неснижаемый_остаток() As String
            Get
                If Me.IsНеснижаемый_остатокNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.Неснижаемый_остатокColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.Неснижаемый_остатокColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Штрихкод_EAN13() As String
            Get
                If Me.IsШтрихкод_EAN13Null Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.Штрихкод_EAN13Column), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.Штрихкод_EAN13Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Штрихкод_EAN8() As String
            Get
                If Me.IsШтрихкод_EAN8Null Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.Штрихкод_EAN8Column), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.Штрихкод_EAN8Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Штрихкод_Code128() As String
            Get
                If Me.IsШтрихкод_Code128Null Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.Штрихкод_Code128Column), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.Штрихкод_Code128Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Описание() As String
            Get
                If Me.IsОписаниеNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.ОписаниеColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.ОписаниеColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Минимальная_цена() As String
            Get
                If Me.IsМинимальная_ценаNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.Минимальная_ценаColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.Минимальная_ценаColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Страна() As String
            Get
                If Me.IsСтранаNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.СтранаColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.СтранаColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property НДС() As String
            Get
                If Me.IsНДСNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.НДСColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.НДСColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Поставщик() As String
            Get
                If Me.IsПоставщикNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.ПоставщикColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.ПоставщикColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Архивный() As String
            Get
                If Me.IsАрхивныйNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.АрхивныйColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.АрхивныйColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Вес() As String
            Get
                If Me.IsВесNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.ВесColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.ВесColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Объем() As String
            Get
                If Me.IsОбъемNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.ОбъемColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.ОбъемColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Код_модификации() As String
            Get
                If Me.IsКод_модификацииNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.Код_модификацииColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.Код_модификацииColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Образец_взят_на_комиссию() As String
            Get
                If Me.IsОбразец_взят_на_комиссиюNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.Образец_взят_на_комиссиюColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.Образец_взят_на_комиссиюColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Схема_расчета_выплат() As String
            Get
                If Me.IsСхема_расчета_выплатNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.Схема_расчета_выплатColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.Схема_расчета_выплатColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Производственный_номер_или_EAN13() As String
            Get
                If Me.IsПроизводственный_номер_или_EAN13Null Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.Производственный_номер_или_EAN13Column), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.Производственный_номер_или_EAN13Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Ответственный_Препаратор() As String
            Get
                If Me.IsОтветственный_ПрепараторNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.Ответственный_ПрепараторColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.Ответственный_ПрепараторColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property _Время_препарации_в_часах__общее_() As String
            Get
                If Me.Is_Время_препарации_в_часах__общее_Null Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps._Время_препарации_в_часах__общее_Column), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps._Время_препарации_в_часах__общее_Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Препараторы_и_время() As String
            Get
                If Me.IsПрепараторы_и_времяNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.Препараторы_и_времяColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.Препараторы_и_времяColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Полная_стоимость_препарации_в_рублях() As String
            Get
                If Me.IsПолная_стоимость_препарации_в_рубляхNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.Полная_стоимость_препарации_в_рубляхColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.Полная_стоимость_препарации_в_рубляхColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Полная_стоимость_закупки_в_рублях() As String
            Get
                If Me.IsПолная_стоимость_закупки_в_рубляхNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.Полная_стоимость_закупки_в_рубляхColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.Полная_стоимость_закупки_в_рубляхColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Процент_прибыльности() As String
            Get
                If Me.IsПроцент_прибыльностиNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.Процент_прибыльностиColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.Процент_прибыльностиColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property _Экспедиция__код_() As String
            Get
                If Me.Is_Экспедиция__код_Null Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps._Экспедиция__код_Column), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps._Экспедиция__код_Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property _Экспедиционный_закупочный_номер() As String
            Get
                If Me.Is_Экспедиционный_закупочный_номерNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps._Экспедиционный_закупочный_номерColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps._Экспедиционный_закупочный_номерColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property _Экспедиционное_закупочное_примечание() As String
            Get
                If Me.Is_Экспедиционное_закупочное_примечаниеNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps._Экспедиционное_закупочное_примечаниеColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps._Экспедиционное_закупочное_примечаниеColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Требуется_сделать_фото() As String
            Get
                If Me.IsТребуется_сделать_фотоNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.Требуется_сделать_фотоColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.Требуется_сделать_фотоColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Требуется_сделать_этикетку() As String
            Get
                If Me.IsТребуется_сделать_этикеткуNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.Требуется_сделать_этикеткуColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.Требуется_сделать_этикеткуColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Требуется_ремонт() As String
            Get
                If Me.IsТребуется_ремонтNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.Требуется_ремонтColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.Требуется_ремонтColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property _Требуется_упаковка__коробочка_() As String
            Get
                If Me.Is_Требуется_упаковка__коробочка_Null Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps._Требуется_упаковка__коробочка_Column), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps._Требуется_упаковка__коробочка_Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Требуется_допрепарация() As String
            Get
                If Me.IsТребуется_допрепарацияNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.Требуется_допрепарацияColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.Требуется_допрепарацияColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Допрепарация_подробно() As String
            Get
                If Me.IsДопрепарация_подробноNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.Допрепарация_подробноColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.Допрепарация_подробноColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Код_узла_дерева_описаний() As String
            Get
                If Me.IsКод_узла_дерева_описанийNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.Код_узла_дерева_описанийColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.Код_узла_дерева_описанийColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Тип_упаковки() As String
            Get
                If Me.IsТип_упаковкиNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps.Тип_упаковкиColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps.Тип_упаковкиColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property _Оформитель_товара__сотрудник_() As String
            Get
                If Me.Is_Оформитель_товара__сотрудник_Null Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps._Оформитель_товара__сотрудник_Column), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps._Оформитель_товара__сотрудник_Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property _Характеристика_Вырезанная_фигурка() As String
            Get
                If Me.Is_Характеристика_Вырезанная_фигуркаNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps._Характеристика_Вырезанная_фигуркаColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps._Характеристика_Вырезанная_фигуркаColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property _Характеристика_Цвет_и_ассоциация() As String
            Get
                If Me.Is_Характеристика_Цвет_и_ассоциацияNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps._Характеристика_Цвет_и_ассоциацияColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps._Характеристика_Цвет_и_ассоциацияColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property _Характеристика_Качество_исходника() As String
            Get
                If Me.Is_Характеристика_Качество_исходникаNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps._Характеристика_Качество_исходникаColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps._Характеристика_Качество_исходникаColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property _Характеристика_Тип() As String
            Get
                If Me.Is_Характеристика_ТипNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps._Характеристика_ТипColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps._Характеристика_ТипColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property _Характеристика_Кол_во_кристаллов() As String
            Get
                If Me.Is_Характеристика_Кол_во_кристалловNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps._Характеристика_Кол_во_кристалловColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps._Характеристика_Кол_во_кристалловColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property _Характеристика_Color() As String
            Get
                If Me.Is_Характеристика_ColorNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablegoodmaps._Характеристика_ColorColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablegoodmaps._Характеристика_ColorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsГруппыNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.ГруппыColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetГруппыNull()
            Me(Me.tablegoodmaps.ГруппыColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsКодNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.КодColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetКодNull()
            Me(Me.tablegoodmaps.КодColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsНаименованиеNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.НаименованиеColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetНаименованиеNull()
            Me(Me.tablegoodmaps.НаименованиеColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsВнешний_кодNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.Внешний_кодColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetВнешний_кодNull()
            Me(Me.tablegoodmaps.Внешний_кодColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsАртикулNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.АртикулColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetАртикулNull()
            Me(Me.tablegoodmaps.АртикулColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsЕдиница_измеренияNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.Единица_измеренияColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetЕдиница_измеренияNull()
            Me(Me.tablegoodmaps.Единица_измеренияColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsРозничная_цена_в_магазинеNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.Розничная_цена_в_магазинеColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetРозничная_цена_в_магазинеNull()
            Me(Me.tablegoodmaps.Розничная_цена_в_магазинеColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Is_Валюта__Розничная_цена_в_магазине_Null() As Boolean
            Return Me.IsNull(Me.tablegoodmaps._Валюта__Розничная_цена_в_магазине_Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Set_Валюта__Розничная_цена_в_магазине_Null()
            Me(Me.tablegoodmaps._Валюта__Розничная_цена_в_магазине_Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsРозничная_в_офисеNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.Розничная_в_офисеColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetРозничная_в_офисеNull()
            Me(Me.tablegoodmaps.Розничная_в_офисеColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Is_Валюта__Розничная_в_офисе_Null() As Boolean
            Return Me.IsNull(Me.tablegoodmaps._Валюта__Розничная_в_офисе_Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Set_Валюта__Розничная_в_офисе_Null()
            Me(Me.tablegoodmaps._Валюта__Розничная_в_офисе_Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsБуржуи_в_офисеNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.Буржуи_в_офисеColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetБуржуи_в_офисеNull()
            Me(Me.tablegoodmaps.Буржуи_в_офисеColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Is_Валюта__Буржуи_в_офисе_Null() As Boolean
            Return Me.IsNull(Me.tablegoodmaps._Валюта__Буржуи_в_офисе_Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Set_Валюта__Буржуи_в_офисе_Null()
            Me(Me.tablegoodmaps._Валюта__Буржуи_в_офисе_Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Is_Почтовая_банк_Null() As Boolean
            Return Me.IsNull(Me.tablegoodmaps._Почтовая_банк_Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Set_Почтовая_банк_Null()
            Me(Me.tablegoodmaps._Почтовая_банк_Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Is_Валюта__Почтовая_банк__Null() As Boolean
            Return Me.IsNull(Me.tablegoodmaps._Валюта__Почтовая_банк__Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Set_Валюта__Почтовая_банк__Null()
            Me(Me.tablegoodmaps._Валюта__Почтовая_банк__Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Is_Почтовая_PayPal_Null() As Boolean
            Return Me.IsNull(Me.tablegoodmaps._Почтовая_PayPal_Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Set_Почтовая_PayPal_Null()
            Me(Me.tablegoodmaps._Почтовая_PayPal_Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Is_Валюта__Почтовая_PayPal__Null() As Boolean
            Return Me.IsNull(Me.tablegoodmaps._Валюта__Почтовая_PayPal__Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Set_Валюта__Почтовая_PayPal__Null()
            Me(Me.tablegoodmaps._Валюта__Почтовая_PayPal__Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsБуржуи_на_выставкеNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.Буржуи_на_выставкеColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetБуржуи_на_выставкеNull()
            Me(Me.tablegoodmaps.Буржуи_на_выставкеColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Is_Валюта__Буржуи_на_выставке_Null() As Boolean
            Return Me.IsNull(Me.tablegoodmaps._Валюта__Буржуи_на_выставке_Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Set_Валюта__Буржуи_на_выставке_Null()
            Me(Me.tablegoodmaps._Валюта__Буржуи_на_выставке_Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEBAYNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.EBAYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEBAYNull()
            Me(Me.tablegoodmaps.EBAYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Is_Валюта__EBAY_Null() As Boolean
            Return Me.IsNull(Me.tablegoodmaps._Валюта__EBAY_Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Set_Валюта__EBAY_Null()
            Me(Me.tablegoodmaps._Валюта__EBAY_Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsИнвойсNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.ИнвойсColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetИнвойсNull()
            Me(Me.tablegoodmaps.ИнвойсColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Is_Валюта__Инвойс_Null() As Boolean
            Return Me.IsNull(Me.tablegoodmaps._Валюта__Инвойс_Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Set_Валюта__Инвойс_Null()
            Me(Me.tablegoodmaps._Валюта__Инвойс_Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsЗакупочная_ценаNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.Закупочная_ценаColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetЗакупочная_ценаNull()
            Me(Me.tablegoodmaps.Закупочная_ценаColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Is_Валюта__Закупочная_цена_Null() As Boolean
            Return Me.IsNull(Me.tablegoodmaps._Валюта__Закупочная_цена_Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Set_Валюта__Закупочная_цена_Null()
            Me(Me.tablegoodmaps._Валюта__Закупочная_цена_Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsНеснижаемый_остатокNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.Неснижаемый_остатокColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetНеснижаемый_остатокNull()
            Me(Me.tablegoodmaps.Неснижаемый_остатокColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsШтрихкод_EAN13Null() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.Штрихкод_EAN13Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetШтрихкод_EAN13Null()
            Me(Me.tablegoodmaps.Штрихкод_EAN13Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsШтрихкод_EAN8Null() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.Штрихкод_EAN8Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetШтрихкод_EAN8Null()
            Me(Me.tablegoodmaps.Штрихкод_EAN8Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsШтрихкод_Code128Null() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.Штрихкод_Code128Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetШтрихкод_Code128Null()
            Me(Me.tablegoodmaps.Штрихкод_Code128Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsОписаниеNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.ОписаниеColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetОписаниеNull()
            Me(Me.tablegoodmaps.ОписаниеColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsМинимальная_ценаNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.Минимальная_ценаColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetМинимальная_ценаNull()
            Me(Me.tablegoodmaps.Минимальная_ценаColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsСтранаNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.СтранаColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetСтранаNull()
            Me(Me.tablegoodmaps.СтранаColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsНДСNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.НДСColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetНДСNull()
            Me(Me.tablegoodmaps.НДСColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsПоставщикNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.ПоставщикColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetПоставщикNull()
            Me(Me.tablegoodmaps.ПоставщикColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsАрхивныйNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.АрхивныйColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetАрхивныйNull()
            Me(Me.tablegoodmaps.АрхивныйColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsВесNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.ВесColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetВесNull()
            Me(Me.tablegoodmaps.ВесColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsОбъемNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.ОбъемColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetОбъемNull()
            Me(Me.tablegoodmaps.ОбъемColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsКод_модификацииNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.Код_модификацииColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetКод_модификацииNull()
            Me(Me.tablegoodmaps.Код_модификацииColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsОбразец_взят_на_комиссиюNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.Образец_взят_на_комиссиюColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetОбразец_взят_на_комиссиюNull()
            Me(Me.tablegoodmaps.Образец_взят_на_комиссиюColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsСхема_расчета_выплатNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.Схема_расчета_выплатColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetСхема_расчета_выплатNull()
            Me(Me.tablegoodmaps.Схема_расчета_выплатColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsПроизводственный_номер_или_EAN13Null() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.Производственный_номер_или_EAN13Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetПроизводственный_номер_или_EAN13Null()
            Me(Me.tablegoodmaps.Производственный_номер_или_EAN13Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsОтветственный_ПрепараторNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.Ответственный_ПрепараторColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetОтветственный_ПрепараторNull()
            Me(Me.tablegoodmaps.Ответственный_ПрепараторColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Is_Время_препарации_в_часах__общее_Null() As Boolean
            Return Me.IsNull(Me.tablegoodmaps._Время_препарации_в_часах__общее_Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Set_Время_препарации_в_часах__общее_Null()
            Me(Me.tablegoodmaps._Время_препарации_в_часах__общее_Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsПрепараторы_и_времяNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.Препараторы_и_времяColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetПрепараторы_и_времяNull()
            Me(Me.tablegoodmaps.Препараторы_и_времяColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsПолная_стоимость_препарации_в_рубляхNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.Полная_стоимость_препарации_в_рубляхColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetПолная_стоимость_препарации_в_рубляхNull()
            Me(Me.tablegoodmaps.Полная_стоимость_препарации_в_рубляхColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsПолная_стоимость_закупки_в_рубляхNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.Полная_стоимость_закупки_в_рубляхColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetПолная_стоимость_закупки_в_рубляхNull()
            Me(Me.tablegoodmaps.Полная_стоимость_закупки_в_рубляхColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsПроцент_прибыльностиNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.Процент_прибыльностиColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetПроцент_прибыльностиNull()
            Me(Me.tablegoodmaps.Процент_прибыльностиColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Is_Экспедиция__код_Null() As Boolean
            Return Me.IsNull(Me.tablegoodmaps._Экспедиция__код_Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Set_Экспедиция__код_Null()
            Me(Me.tablegoodmaps._Экспедиция__код_Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Is_Экспедиционный_закупочный_номерNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps._Экспедиционный_закупочный_номерColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Set_Экспедиционный_закупочный_номерNull()
            Me(Me.tablegoodmaps._Экспедиционный_закупочный_номерColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Is_Экспедиционное_закупочное_примечаниеNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps._Экспедиционное_закупочное_примечаниеColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Set_Экспедиционное_закупочное_примечаниеNull()
            Me(Me.tablegoodmaps._Экспедиционное_закупочное_примечаниеColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsТребуется_сделать_фотоNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.Требуется_сделать_фотоColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetТребуется_сделать_фотоNull()
            Me(Me.tablegoodmaps.Требуется_сделать_фотоColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsТребуется_сделать_этикеткуNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.Требуется_сделать_этикеткуColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetТребуется_сделать_этикеткуNull()
            Me(Me.tablegoodmaps.Требуется_сделать_этикеткуColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsТребуется_ремонтNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.Требуется_ремонтColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetТребуется_ремонтNull()
            Me(Me.tablegoodmaps.Требуется_ремонтColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Is_Требуется_упаковка__коробочка_Null() As Boolean
            Return Me.IsNull(Me.tablegoodmaps._Требуется_упаковка__коробочка_Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Set_Требуется_упаковка__коробочка_Null()
            Me(Me.tablegoodmaps._Требуется_упаковка__коробочка_Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsТребуется_допрепарацияNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.Требуется_допрепарацияColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetТребуется_допрепарацияNull()
            Me(Me.tablegoodmaps.Требуется_допрепарацияColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsДопрепарация_подробноNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.Допрепарация_подробноColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetДопрепарация_подробноNull()
            Me(Me.tablegoodmaps.Допрепарация_подробноColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsКод_узла_дерева_описанийNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.Код_узла_дерева_описанийColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetКод_узла_дерева_описанийNull()
            Me(Me.tablegoodmaps.Код_узла_дерева_описанийColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsТип_упаковкиNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps.Тип_упаковкиColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetТип_упаковкиNull()
            Me(Me.tablegoodmaps.Тип_упаковкиColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Is_Оформитель_товара__сотрудник_Null() As Boolean
            Return Me.IsNull(Me.tablegoodmaps._Оформитель_товара__сотрудник_Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Set_Оформитель_товара__сотрудник_Null()
            Me(Me.tablegoodmaps._Оформитель_товара__сотрудник_Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Is_Характеристика_Вырезанная_фигуркаNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps._Характеристика_Вырезанная_фигуркаColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Set_Характеристика_Вырезанная_фигуркаNull()
            Me(Me.tablegoodmaps._Характеристика_Вырезанная_фигуркаColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Is_Характеристика_Цвет_и_ассоциацияNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps._Характеристика_Цвет_и_ассоциацияColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Set_Характеристика_Цвет_и_ассоциацияNull()
            Me(Me.tablegoodmaps._Характеристика_Цвет_и_ассоциацияColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Is_Характеристика_Качество_исходникаNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps._Характеристика_Качество_исходникаColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Set_Характеристика_Качество_исходникаNull()
            Me(Me.tablegoodmaps._Характеристика_Качество_исходникаColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Is_Характеристика_ТипNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps._Характеристика_ТипColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Set_Характеристика_ТипNull()
            Me(Me.tablegoodmaps._Характеристика_ТипColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Is_Характеристика_Кол_во_кристалловNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps._Характеристика_Кол_во_кристалловColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Set_Характеристика_Кол_во_кристалловNull()
            Me(Me.tablegoodmaps._Характеристика_Кол_во_кристалловColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Is_Характеристика_ColorNull() As Boolean
            Return Me.IsNull(Me.tablegoodmaps._Характеристика_ColorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Set_Характеристика_ColorNull()
            Me(Me.tablegoodmaps._Характеристика_ColorColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class goodmapsRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As goodmapsRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As goodmapsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As goodmapsRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DataSet_oldGoodMapTableAdapters

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class goodmapsTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "goodmaps"
            tableMapping.ColumnMappings.Add("Группы", "Группы")
            tableMapping.ColumnMappings.Add("Код", "Код")
            tableMapping.ColumnMappings.Add("Наименование", "Наименование")
            tableMapping.ColumnMappings.Add("Внешний код", "Внешний код")
            tableMapping.ColumnMappings.Add("Артикул", "Артикул")
            tableMapping.ColumnMappings.Add("Единица измерения", "Единица измерения")
            tableMapping.ColumnMappings.Add("Розничная цена в магазине", "Розничная цена в магазине")
            tableMapping.ColumnMappings.Add("Валюта (Розничная цена в магазине)", "Валюта (Розничная цена в магазине)")
            tableMapping.ColumnMappings.Add("Розничная в офисе", "Розничная в офисе")
            tableMapping.ColumnMappings.Add("Валюта (Розничная в офисе)", "Валюта (Розничная в офисе)")
            tableMapping.ColumnMappings.Add("Буржуи в офисе", "Буржуи в офисе")
            tableMapping.ColumnMappings.Add("Валюта (Буржуи в офисе)", "Валюта (Буржуи в офисе)")
            tableMapping.ColumnMappings.Add("Почтовая(банк)", "Почтовая(банк)")
            tableMapping.ColumnMappings.Add("Валюта (Почтовая(банк))", "Валюта (Почтовая(банк))")
            tableMapping.ColumnMappings.Add("Почтовая(PayPal)", "Почтовая(PayPal)")
            tableMapping.ColumnMappings.Add("Валюта (Почтовая(PayPal))", "Валюта (Почтовая(PayPal))")
            tableMapping.ColumnMappings.Add("Буржуи на выставке", "Буржуи на выставке")
            tableMapping.ColumnMappings.Add("Валюта (Буржуи на выставке)", "Валюта (Буржуи на выставке)")
            tableMapping.ColumnMappings.Add("EBAY", "EBAY")
            tableMapping.ColumnMappings.Add("Валюта (EBAY)", "Валюта (EBAY)")
            tableMapping.ColumnMappings.Add("Инвойс", "Инвойс")
            tableMapping.ColumnMappings.Add("Валюта (Инвойс)", "Валюта (Инвойс)")
            tableMapping.ColumnMappings.Add("Закупочная цена", "Закупочная цена")
            tableMapping.ColumnMappings.Add("Валюта (Закупочная цена)", "Валюта (Закупочная цена)")
            tableMapping.ColumnMappings.Add("Неснижаемый остаток", "Неснижаемый остаток")
            tableMapping.ColumnMappings.Add("Штрихкод EAN13", "Штрихкод EAN13")
            tableMapping.ColumnMappings.Add("Штрихкод EAN8", "Штрихкод EAN8")
            tableMapping.ColumnMappings.Add("Штрихкод Code128", "Штрихкод Code128")
            tableMapping.ColumnMappings.Add("Описание", "Описание")
            tableMapping.ColumnMappings.Add("Минимальная цена", "Минимальная цена")
            tableMapping.ColumnMappings.Add("Страна", "Страна")
            tableMapping.ColumnMappings.Add("НДС", "НДС")
            tableMapping.ColumnMappings.Add("Поставщик", "Поставщик")
            tableMapping.ColumnMappings.Add("Архивный", "Архивный")
            tableMapping.ColumnMappings.Add("Вес", "Вес")
            tableMapping.ColumnMappings.Add("Объем", "Объем")
            tableMapping.ColumnMappings.Add("Код модификации", "Код модификации")
            tableMapping.ColumnMappings.Add("Образец взят на комиссию", "Образец взят на комиссию")
            tableMapping.ColumnMappings.Add("Схема расчета выплат", "Схема расчета выплат")
            tableMapping.ColumnMappings.Add("Производственный номер или EAN13", "Производственный номер или EAN13")
            tableMapping.ColumnMappings.Add("Ответственный Препаратор", "Ответственный Препаратор")
            tableMapping.ColumnMappings.Add("Время препарации в часах (общее)", "Время препарации в часах (общее)")
            tableMapping.ColumnMappings.Add("Препараторы и время", "Препараторы и время")
            tableMapping.ColumnMappings.Add("Полная стоимость препарации в рублях", "Полная стоимость препарации в рублях")
            tableMapping.ColumnMappings.Add("Полная стоимость закупки в рублях", "Полная стоимость закупки в рублях")
            tableMapping.ColumnMappings.Add("Процент прибыльности", "Процент прибыльности")
            tableMapping.ColumnMappings.Add("Экспедиция (код)", "Экспедиция (код)")
            tableMapping.ColumnMappings.Add("Экспедиционный/закупочный номер", "Экспедиционный/закупочный номер")
            tableMapping.ColumnMappings.Add("Экспедиционное/закупочное примечание", "Экспедиционное/закупочное примечание")
            tableMapping.ColumnMappings.Add("Требуется сделать фото", "Требуется сделать фото")
            tableMapping.ColumnMappings.Add("Требуется сделать этикетку", "Требуется сделать этикетку")
            tableMapping.ColumnMappings.Add("Требуется ремонт", "Требуется ремонт")
            tableMapping.ColumnMappings.Add("Требуется упаковка (коробочка)", "Требуется упаковка (коробочка)")
            tableMapping.ColumnMappings.Add("Требуется допрепарация", "Требуется допрепарация")
            tableMapping.ColumnMappings.Add("Допрепарация подробно", "Допрепарация подробно")
            tableMapping.ColumnMappings.Add("Код узла дерева описаний", "Код узла дерева описаний")
            tableMapping.ColumnMappings.Add("Тип упаковки", "Тип упаковки")
            tableMapping.ColumnMappings.Add("Оформитель товара (сотрудник)", "Оформитель товара (сотрудник)")
            tableMapping.ColumnMappings.Add("Характеристика:Вырезанная фигурка", "Характеристика:Вырезанная фигурка")
            tableMapping.ColumnMappings.Add("Характеристика:Цвет и ассоциация", "Характеристика:Цвет и ассоциация")
            tableMapping.ColumnMappings.Add("Характеристика:Качество исходника", "Характеристика:Качество исходника")
            tableMapping.ColumnMappings.Add("Характеристика:Тип", "Характеристика:Тип")
            tableMapping.ColumnMappings.Add("Характеристика:Кол-во кристаллов", "Характеристика:Кол-во кристаллов")
            tableMapping.ColumnMappings.Add("Характеристика:Color", "Характеристика:Color")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[goodmaps] ([Группы], [Код], [Наименование], [Внешний код], [Ар" & _
                "тикул], [Единица измерения], [Розничная цена в магазине], [Валюта (Розничная цен" & _
                "а в магазине)], [Розничная в офисе], [Валюта (Розничная в офисе)], [Буржуи в офи" & _
                "се], [Валюта (Буржуи в офисе)], [Почтовая(банк)], [Валюта (Почтовая(банк))], [По" & _
                "чтовая(PayPal)], [Валюта (Почтовая(PayPal))], [Буржуи на выставке], [Валюта (Бур" & _
                "жуи на выставке)], [EBAY], [Валюта (EBAY)], [Инвойс], [Валюта (Инвойс)], [Закупо" & _
                "чная цена], [Валюта (Закупочная цена)], [Неснижаемый остаток], [Штрихкод EAN13]," & _
                " [Штрихкод EAN8], [Штрихкод Code128], [Описание], [Минимальная цена], [Страна], " & _
                "[НДС], [Поставщик], [Архивный], [Вес], [Объем], [Код модификации], [Образец взят" & _
                " на комиссию], [Схема расчета выплат], [Производственный номер или EAN13], [Отве" & _
                "тственный Препаратор], [Время препарации в часах (общее)], [Препараторы и время]" & _
                ", [Полная стоимость препарации в рублях], [Полная стоимость закупки в рублях], [" & _
                "Процент прибыльности], [Экспедиция (код)], [Экспедиционный/закупочный номер], [Э" & _
                "кспедиционное/закупочное примечание], [Требуется сделать фото], [Требуется сдела" & _
                "ть этикетку], [Требуется ремонт], [Требуется упаковка (коробочка)], [Требуется д" & _
                "опрепарация], [Допрепарация подробно], [Код узла дерева описаний], [Тип упаковки" & _
                "], [Оформитель товара (сотрудник)], [Характеристика:Вырезанная фигурка], [Характ" & _
                "еристика:Цвет и ассоциация], [Характеристика:Качество исходника], [Характеристик" & _
                "а:Тип], [Характеристика:Кол-во кристаллов], [Характеристика:Color]) VALUES (@Гру" & _
                "ппы, @Код, @Наименование, @Внешний_код, @Артикул, @Единица_измерения, @Розничная" & _
                "_цена_в_магазине, @p1, @Розничная_в_офисе, @p4, @Буржуи_в_офисе, @p7, @p10, @p13" & _
                ", @p16, @p19, @Буржуи_на_выставке, @p22, @EBAY, @p25, @Инвойс, @p28, @Закупочная" & _
                "_цена, @p31, @Неснижаемый_остаток, @Штрихкод_EAN13, @Штрихкод_EAN8, @Штрихкод_Co" & _
                "de128, @Описание, @Минимальная_цена, @Страна, @НДС, @Поставщик, @Архивный, @Вес," & _
                " @Объем, @Код_модификации, @Образец_взят_на_комиссию, @Схема_расчета_выплат, @Пр" & _
                "оизводственный_номер_или_EAN13, @Ответственный_Препаратор, @p34, @Препараторы_и_" & _
                "время, @Полная_стоимость_препарации_в_рублях, @Полная_стоимость_закупки_в_рублях" & _
                ", @Процент_прибыльности, @p37, @p40, @p43, @Требуется_сделать_фото, @Требуется_с" & _
                "делать_этикетку, @Требуется_ремонт, @p46, @Требуется_допрепарация, @Допрепарация" & _
                "_подробно, @Код_узла_дерева_описаний, @Тип_упаковки, @p49, @p52, @p55, @p58, @p6" & _
                "1, @p64, @p67)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Группы", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Группы", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Код", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Код", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Наименование", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Наименование", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Внешний_код", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Внешний код", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Артикул", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Артикул", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Единица_измерения", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Единица измерения", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Розничная_цена_в_магазине", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Розничная цена в магазине", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Валюта (Розничная цена в магазине)", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Розничная_в_офисе", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Розничная в офисе", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Валюта (Розничная в офисе)", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Буржуи_в_офисе", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Буржуи в офисе", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Валюта (Буржуи в офисе)", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Почтовая(банк)", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p13", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Валюта (Почтовая(банк))", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p16", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Почтовая(PayPal)", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p19", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Валюта (Почтовая(PayPal))", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Буржуи_на_выставке", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Буржуи на выставке", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p22", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Валюта (Буржуи на выставке)", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EBAY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EBAY", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p25", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Валюта (EBAY)", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Инвойс", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Инвойс", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p28", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Валюта (Инвойс)", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Закупочная_цена", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Закупочная цена", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p31", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Валюта (Закупочная цена)", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Неснижаемый_остаток", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Неснижаемый остаток", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Штрихкод_EAN13", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Штрихкод EAN13", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Штрихкод_EAN8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Штрихкод EAN8", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Штрихкод_Code128", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Штрихкод Code128", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Описание", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Описание", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Минимальная_цена", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Минимальная цена", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Страна", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Страна", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@НДС", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "НДС", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Поставщик", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Поставщик", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Архивный", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Архивный", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Вес", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Вес", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Объем", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Объем", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Код_модификации", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Код модификации", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Образец_взят_на_комиссию", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Образец взят на комиссию", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Схема_расчета_выплат", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Схема расчета выплат", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Производственный_номер_или_EAN13", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Производственный номер или EAN13", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ответственный_Препаратор", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ответственный Препаратор", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p34", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Время препарации в часах (общее)", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Препараторы_и_время", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Препараторы и время", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Полная_стоимость_препарации_в_рублях", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Полная стоимость препарации в рублях", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Полная_стоимость_закупки_в_рублях", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Полная стоимость закупки в рублях", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Процент_прибыльности", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Процент прибыльности", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p37", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Экспедиция (код)", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p40", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Экспедиционный/закупочный номер", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p43", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Экспедиционное/закупочное примечание", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Требуется_сделать_фото", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Требуется сделать фото", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Требуется_сделать_этикетку", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Требуется сделать этикетку", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Требуется_ремонт", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Требуется ремонт", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p46", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Требуется упаковка (коробочка)", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Требуется_допрепарация", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Требуется допрепарация", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Допрепарация_подробно", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Допрепарация подробно", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Код_узла_дерева_описаний", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Код узла дерева описаний", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Тип_упаковки", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Тип упаковки", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p49", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Оформитель товара (сотрудник)", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p52", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Характеристика:Вырезанная фигурка", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p55", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Характеристика:Цвет и ассоциация", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p58", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Характеристика:Качество исходника", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p61", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Характеристика:Тип", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p64", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Характеристика:Кол-во кристаллов", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p67", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Характеристика:Color", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Service.My.MySettings.Default.dboPhotoConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Группы, Код, Наименование, [Внешний код], Артикул, [Единица измерения], [Р" & _
                "озничная цена в магазине], [Валюта (Розничная цена в магазине)], [Розничная в оф" & _
                "исе], [Валюта (Розничная в офисе)], [Буржуи в офисе], [Валюта (Буржуи в офисе)]," & _
                " [Почтовая(банк)], [Валюта (Почтовая(банк))], [Почтовая(PayPal)], [Валюта (Почто" & _
                "вая(PayPal))], [Буржуи на выставке], [Валюта (Буржуи на выставке)], EBAY, [Валют" & _
                "а (EBAY)], Инвойс, [Валюта (Инвойс)], [Закупочная цена], [Валюта (Закупочная цен" & _
                "а)], [Неснижаемый остаток], [Штрихкод EAN13], [Штрихкод EAN8], [Штрихкод Code128" & _
                "], Описание, [Минимальная цена], Страна, НДС, Поставщик, Архивный, Вес, Объем, [" & _
                "Код модификации], [Образец взят на комиссию], [Схема расчета выплат], [Производс" & _
                "твенный номер или EAN13], [Ответственный Препаратор], [Время препарации в часах " & _
                "(общее)], [Препараторы и время], [Полная стоимость препарации в рублях], [Полная" & _
                " стоимость закупки в рублях], [Процент прибыльности], [Экспедиция (код)], [Экспе" & _
                "диционный/закупочный номер], [Экспедиционное/закупочное примечание], [Требуется " & _
                "сделать фото], [Требуется сделать этикетку], [Требуется ремонт], [Требуется упак" & _
                "овка (коробочка)], [Требуется допрепарация], [Допрепарация подробно], [Код узла " & _
                "дерева описаний], [Тип упаковки], [Оформитель товара (сотрудник)], [Характеристи" & _
                "ка:Вырезанная фигурка], [Характеристика:Цвет и ассоциация], [Характеристика:Каче" & _
                "ство исходника], [Характеристика:Тип], [Характеристика:Кол-во кристаллов], [Хара" & _
                "ктеристика:Color] FROM dbo.goodmaps"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As DataSet_oldGoodMap.goodmapsDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData() As DataSet_oldGoodMap.goodmapsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet_oldGoodMap.goodmapsDataTable = New DataSet_oldGoodMap.goodmapsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataTable As DataSet_oldGoodMap.goodmapsDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataSet As DataSet_oldGoodMap) As Integer
            Return Me.Adapter.Update(dataSet, "goodmaps")
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, True)> _
        Public Overridable Overloads Function Insert( _
                    ByVal Группы As String, _
                    ByVal Код As String, _
                    ByVal Наименование As String, _
                    ByVal Внешний_код As String, _
                    ByVal Артикул As String, _
                    ByVal Единица_измерения As String, _
                    ByVal Розничная_цена_в_магазине As String, _
                    ByVal p1 As String, _
                    ByVal Розничная_в_офисе As String, _
                    ByVal p4 As String, _
                    ByVal Буржуи_в_офисе As String, _
                    ByVal p7 As String, _
                    ByVal p10 As String, _
                    ByVal p13 As String, _
                    ByVal p16 As String, _
                    ByVal p19 As String, _
                    ByVal Буржуи_на_выставке As String, _
                    ByVal p22 As String, _
                    ByVal EBAY As String, _
                    ByVal p25 As String, _
                    ByVal Инвойс As String, _
                    ByVal p28 As String, _
                    ByVal Закупочная_цена As String, _
                    ByVal p31 As String, _
                    ByVal Неснижаемый_остаток As String, _
                    ByVal Штрихкод_EAN13 As String, _
                    ByVal Штрихкод_EAN8 As String, _
                    ByVal Штрихкод_Code128 As String, _
                    ByVal Описание As String, _
                    ByVal Минимальная_цена As String, _
                    ByVal Страна As String, _
                    ByVal НДС As String, _
                    ByVal Поставщик As String, _
                    ByVal Архивный As String, _
                    ByVal Вес As String, _
                    ByVal Объем As String, _
                    ByVal Код_модификации As String, _
                    ByVal Образец_взят_на_комиссию As String, _
                    ByVal Схема_расчета_выплат As String, _
                    ByVal Производственный_номер_или_EAN13 As String, _
                    ByVal Ответственный_Препаратор As String, _
                    ByVal p34 As String, _
                    ByVal Препараторы_и_время As String, _
                    ByVal Полная_стоимость_препарации_в_рублях As String, _
                    ByVal Полная_стоимость_закупки_в_рублях As String, _
                    ByVal Процент_прибыльности As String, _
                    ByVal p37 As String, _
                    ByVal p40 As String, _
                    ByVal p43 As String, _
                    ByVal Требуется_сделать_фото As String, _
                    ByVal Требуется_сделать_этикетку As String, _
                    ByVal Требуется_ремонт As String, _
                    ByVal p46 As String, _
                    ByVal Требуется_допрепарация As String, _
                    ByVal Допрепарация_подробно As String, _
                    ByVal Код_узла_дерева_описаний As String, _
                    ByVal Тип_упаковки As String, _
                    ByVal p49 As String, _
                    ByVal p52 As String, _
                    ByVal p55 As String, _
                    ByVal p58 As String, _
                    ByVal p61 As String, _
                    ByVal p64 As String, _
                    ByVal p67 As String) As Integer
            If (Группы Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Группы, String)
            End If
            If (Код Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Код, String)
            End If
            If (Наименование Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Наименование, String)
            End If
            If (Внешний_код Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Внешний_код, String)
            End If
            If (Артикул Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Артикул, String)
            End If
            If (Единица_измерения Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Единица_измерения, String)
            End If
            If (Розничная_цена_в_магазине Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Розничная_цена_в_магазине, String)
            End If
            If (p1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(p1, String)
            End If
            If (Розничная_в_офисе Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Розничная_в_офисе, String)
            End If
            If (p4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(p4, String)
            End If
            If (Буржуи_в_офисе Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(Буржуи_в_офисе, String)
            End If
            If (p7 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(p7, String)
            End If
            If (p10 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(p10, String)
            End If
            If (p13 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(p13, String)
            End If
            If (p16 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(p16, String)
            End If
            If (p19 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(p19, String)
            End If
            If (Буржуи_на_выставке Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(Буржуи_на_выставке, String)
            End If
            If (p22 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(p22, String)
            End If
            If (EBAY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(EBAY, String)
            End If
            If (p25 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(p25, String)
            End If
            If (Инвойс Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(Инвойс, String)
            End If
            If (p28 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(p28, String)
            End If
            If (Закупочная_цена Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(Закупочная_цена, String)
            End If
            If (p31 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(p31, String)
            End If
            If (Неснижаемый_остаток Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(Неснижаемый_остаток, String)
            End If
            If (Штрихкод_EAN13 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(Штрихкод_EAN13, String)
            End If
            If (Штрихкод_EAN8 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(Штрихкод_EAN8, String)
            End If
            If (Штрихкод_Code128 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(Штрихкод_Code128, String)
            End If
            If (Описание Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(Описание, String)
            End If
            If (Минимальная_цена Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(Минимальная_цена, String)
            End If
            If (Страна Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(Страна, String)
            End If
            If (НДС Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(НДС, String)
            End If
            If (Поставщик Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(Поставщик, String)
            End If
            If (Архивный Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(Архивный, String)
            End If
            If (Вес Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(Вес, String)
            End If
            If (Объем Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(Объем, String)
            End If
            If (Код_модификации Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(Код_модификации, String)
            End If
            If (Образец_взят_на_комиссию Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(Образец_взят_на_комиссию, String)
            End If
            If (Схема_расчета_выплат Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(Схема_расчета_выплат, String)
            End If
            If (Производственный_номер_или_EAN13 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(Производственный_номер_или_EAN13, String)
            End If
            If (Ответственный_Препаратор Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(Ответственный_Препаратор, String)
            End If
            If (p34 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(p34, String)
            End If
            If (Препараторы_и_время Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(Препараторы_и_время, String)
            End If
            If (Полная_стоимость_препарации_в_рублях Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(Полная_стоимость_препарации_в_рублях, String)
            End If
            If (Полная_стоимость_закупки_в_рублях Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(Полная_стоимость_закупки_в_рублях, String)
            End If
            If (Процент_прибыльности Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(Процент_прибыльности, String)
            End If
            If (p37 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(p37, String)
            End If
            If (p40 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(p40, String)
            End If
            If (p43 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(p43, String)
            End If
            If (Требуется_сделать_фото Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(Требуется_сделать_фото, String)
            End If
            If (Требуется_сделать_этикетку Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(Требуется_сделать_этикетку, String)
            End If
            If (Требуется_ремонт Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(Требуется_ремонт, String)
            End If
            If (p46 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(p46, String)
            End If
            If (Требуется_допрепарация Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(Требуется_допрепарация, String)
            End If
            If (Допрепарация_подробно Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(Допрепарация_подробно, String)
            End If
            If (Код_узла_дерева_описаний Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(Код_узла_дерева_описаний, String)
            End If
            If (Тип_упаковки Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(Тип_упаковки, String)
            End If
            If (p49 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(p49, String)
            End If
            If (p52 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(p52, String)
            End If
            If (p55 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(p55, String)
            End If
            If (p58 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(p58, String)
            End If
            If (p61 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(p61, String)
            End If
            If (p64 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(p64, String)
            End If
            If (p67 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(p67, String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close()
                End If
            End Try
        End Function
    End Class

    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" & _
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")> _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component

        Private _updateOrder As UpdateOrderOption

        Private _goodmapsTableAdapter As goodmapsTableAdapter

        Private _backupDataSetBeforeUpdate As Boolean

        Private _connection As Global.System.Data.IDbConnection

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set(value As UpdateOrderOption)
                Me._updateOrder = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" & _
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" & _
            "a", "System.Drawing.Design.UITypeEditor")> _
        Public Property goodmapsTableAdapter() As goodmapsTableAdapter
            Get
                Return Me._goodmapsTableAdapter
            End Get
            Set(value As goodmapsTableAdapter)
                Me._goodmapsTableAdapter = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set(value As Boolean)
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._goodmapsTableAdapter) Is Nothing) _
                            AndAlso (Not (Me._goodmapsTableAdapter.Connection) Is Nothing)) Then
                    Return Me._goodmapsTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set(value As Global.System.Data.IDbConnection)
                Me._connection = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._goodmapsTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property

        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Function UpdateUpdatedRows(ByVal dataSet As DataSet_oldGoodMap, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._goodmapsTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.goodmaps.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing) _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._goodmapsTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function

        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Function UpdateInsertedRows(ByVal dataSet As DataSet_oldGoodMap, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._goodmapsTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.goodmaps.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing) _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._goodmapsTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function

        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Function UpdateDeletedRows(ByVal dataSet As DataSet_oldGoodMap, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._goodmapsTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.goodmaps.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing) _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._goodmapsTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function

        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing) _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing) _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = False) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function

        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overridable Function UpdateAll(ByVal dataSet As DataSet_oldGoodMap) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = False) Then
                Return 0
            End If
            If ((Not (Me._goodmapsTableAdapter) Is Nothing) _
                        AndAlso (Me.MatchTableAdapterConnection(Me._goodmapsTableAdapter.Connection) = False)) Then
                Throw New Global.System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" & _
                        "r, должны использовать одинаковую строку подключения.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager не содержит сведений о подключении. Укажите для каждого адапт" & _
                        "ера таблицы TableAdapterManager допустимый экземпляр адаптера таблицы.")
            End If
            Dim workConnOpened As Boolean = False
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken) _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close()
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open()
                workConnOpened = True
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("Не удается начать транзакцию. Текущее соединение данных не поддерживает транзакци" & _
                        "и или текущее состояние не позволяет начать транзакцию.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try
                '---- Prepare for update -----------
                '
                If (Not (Me._goodmapsTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._goodmapsTableAdapter, Me._goodmapsTableAdapter.Connection)
                    Me._goodmapsTableAdapter.Connection = CType(workConnection, Global.System.Data.SqlClient.SqlConnection)
                    Me._goodmapsTableAdapter.Transaction = CType(workTransaction, Global.System.Data.SqlClient.SqlTransaction)
                    If Me._goodmapsTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._goodmapsTableAdapter.Adapter.AcceptChangesDuringUpdate = False
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._goodmapsTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit()
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges()
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges()
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback()
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear()
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges()
                            row.SetAdded()
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close()
                End If
                If (Not (Me._goodmapsTableAdapter) Is Nothing) Then
                    Me._goodmapsTableAdapter.Connection = CType(revertConnections(Me._goodmapsTableAdapter), Global.System.Data.SqlClient.SqlConnection)
                    Me._goodmapsTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = True
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return True
            End If
            If ((Me.Connection Is Nothing) _
                        OrElse (inputConnection Is Nothing)) Then
                Return True
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return True
            End If
            Return False
        End Function

        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Enum UpdateOrderOption

            InsertUpdateDelete = 0

            UpdateInsertDelete = 1
        End Enum

        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)

            Private _relation As Global.System.Data.DataRelation

            Private _childFirst As Integer

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New()
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing) _
                            AndAlso (traversedRows.ContainsKey(parent) = False))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear()
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing) _
                                AndAlso (traversedRows.ContainsKey(parent) = False))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing) _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
